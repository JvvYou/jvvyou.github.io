{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5173\u4e8e","text":"<ul> <li> <p> \u672c\u7ad9\u7528github page + mkdocs + material + giscus + Google Analytics \u7b49\u6784\u6210\u3002</p> </li> <li> <p> \u5206\u4eab\u65e5\u5e38\u5de5\u4f5c\u548c\u751f\u6d3b\u4e2d\u6240\u9047\u5230\u7684\u4e8b\u60c5\u3002</p> </li> <li> <p> \u559c\u6b22\u5e72\u7684\u4e8b\u60c5\uff1a</p> <ul> <li>\u73a9QQ\u98de\u8f66</li> <li>\u901bB\u7ad9</li> <li>\u770b\u76f4\u64ad</li> <li>\u51fa\u53bb\u6d6a</li> <li>...</li> </ul> </li> </ul>"},{"location":"blog/2024/07/29/frodo%20sql%E5%9B%9E%E6%94%BE/","title":"frodo sql\u56de\u653e","text":"<p>mysql \u8fc1\u79fb\uff0c\u6307\u5b9a\u67d0\u4e00\u65f6\u95f4\u7684\u5ba1\u8ba1\u65e5\u5fd7\u8fdb\u884c\u56de\u653e\u3002</p>","tags":["mysql","frodo"]},{"location":"blog/2024/07/29/frodo%20sql%E5%9B%9E%E6%94%BE/#_1","title":"\u524d\u8a00","text":"<p>\u8fd9\u4e2a\u8f6f\u4ef6\u6211\u4eec\u5728\u4ece\u817e\u8baf\u8fc1\u79fb\u6570\u636e\u5e93\u5230\u963f\u91cc\u7684\u65f6\u5019\uff0c\u963f\u91cc\u7684\u540c\u5b66\u7ed9\u6211\u4eec\u7528\u8fc7\uff0c\u6240\u4ee5\u89c9\u5f97\u5f88\u597d\u7528\uff0c\u7136\u540e\u6211\u5c31\u53bbgithub\u67e5\u627e\u4e86\u4e00\u4e0b\uff0c\u963f\u91cc\u5c45\u7136\u5f00\u6e90\u4e86\u3002\u4e3b\u8981\u7528\u7684\u662ffrodo\uff0c \u5f00\u6e90\u7248\u672c\u7684\u8ddf\u4ed6\u4eec\u63d0\u4f9b\u7ed9\u5ba2\u6237\u7684\u53c2\u6570\u4e0a\u548c\u7248\u672c\u4e0a\u4e5f\u662f\u6709\u533a\u522b\u7684\uff0c\u4f46\u662f\u5f00\u6e90\u4e5f\u591f\u7528\u4e86\u3002</p> <p>\u6211\u7684\u6e90\u6570\u636e\u662f\u4ece\u817e\u8baf\u4e91\u7684\u5ba1\u8ba1\u65e5\u5fd7\u91cc\u9762\u63d0\u53d6\u7684\uff0c\u5e76\u4e14\u8f6c\u6362\u6210frodo\u80fd\u8bc6\u522b\u7684\u65e5\u5fd7\u3002</p>","tags":["mysql","frodo"]},{"location":"blog/2024/07/29/frodo%20sql%E5%9B%9E%E6%94%BE/#1maven","title":"1\u3001\u914d\u7f6e\u963f\u91cc\u7684maven\u4ed3\u5e93","text":"<p>\u589e\u52a0\u4e00\u4e2a\u914d\u7f6e\u5c31\u884c,\u539f\u6587 <pre><code>&lt;mirror&gt;\n  &lt;id&gt;aliyunmaven&lt;/id&gt;\n  &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;\n  &lt;name&gt;\u963f\u91cc\u4e91\u516c\u5171\u4ed3\u5e93&lt;/name&gt;\n  &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;\n&lt;/mirror&gt;\n</code></pre></p>","tags":["mysql","frodo"]},{"location":"blog/2024/07/29/frodo%20sql%E5%9B%9E%E6%94%BE/#2frodo","title":"2\u3001\u7f16\u8bd1\u5b89\u88c5frodo","text":"<p>\u53c2\u8003github\u4e2d\u7684readme</p>","tags":["mysql","frodo"]},{"location":"blog/2024/07/29/frodo%20sql%E5%9B%9E%E6%94%BE/#3","title":"3\u3001\u89e3\u6790\u817e\u8baf\u4e91\u5ba1\u8ba1\u65e5\u5fd7","text":"<p><pre><code>from datetime import datetime\nimport pandas as pd\nimport json\n\ninput_filename = '123.csv'\noutput_filename = 'sql.txt'\ncolumns_to_read = ['Sql', 'User', 'ExecTime', 'ThreadId', 'Timestamp', 'DBName']\ndate_format = \"%Y-%m-%d %H:%M:%S\"\n\ndf = pd.read_csv(input_filename, usecols=columns_to_read)\n\nfor index, row in df.iterrows():\n   dt_object = datetime.strptime(row['Timestamp'], date_format)\n   timestamp_in_seconds = dt_object.timestamp()\n   timestamp_in_microseconds = int(timestamp_in_seconds * 1_000_000)\n\n   _dict={\n     \"schema\":row['DBName'],\n     \"session\":row['ThreadId'],\n     \"execTime\":row['ExecTime'],\n     \"startTime\":timestamp_in_microseconds,\n     \"convertSqlText\":row['Sql'],\n     \"user\":row['User']\n   }\n   print(json.dumps(_dict))\n\n   #with open(output_filename, 'w+') as json_file:\n   # json.dump(json.dumps(_dict), json_file, indent=4)\n</code></pre> \u6700\u7ec8\u751f\u6210\u7684\u62a5\u544a\u4e2d\uff0c\u6a21\u677f\u7684\u6210\u529f\u7387\u8d8a\u9ad8\u8d8a\u597d\uff0c\u4f4e\u7684\u8bdd\uff0c\u56de\u653e\u51fa\u6765\u7684\u6570\u636e\u5e93\u76d1\u63a7\u6570\u636e\u4e0d\u4e00\u5b9a\u51c6\u786e\u3002</p> <ul> <li>convertSqlText\u4e2d\u7684\u5185\u5bb9\u4e0d\u8981\u4e3aNaN</li> <li>\u5305\u542b\u2019/\u2018 \u53ef\u80fd\u4f1a\u6267\u884c\u5931\u8d25 </li> </ul> <p>\u751f\u6210\u7684\u6570\u636e\u683c\u5f0f\uff1a <pre><code>{\"schema\": \"dbname\", \"session\": 6666, \"execTime\": 83, \"startTime\": 1721666395000000, \"convertSqlText\": \"SELECT  * FROM test WHERE  id = '6666' LIMIT 1\", \"user\": \"test\"}\n</code></pre></p>","tags":["mysql","frodo"]},{"location":"blog/2024/07/29/frodo%20sql%E5%9B%9E%E6%94%BE/#4frodo","title":"4\u3001\u6267\u884cfrodo","text":"<pre><code>java -Xmx8G -Xms1G -jar frodo.jar --file=/root/789.json --source-db=mysql --replay-to=mysql --port=3306 --host=xxxxx --username=xxx --password='xxxx' --concurrency=15 --time=2400 --task=0723-00-40 --schema-map=xxx --log-level=info --rate-factor=1 --database=xxx --filter=DQL\n</code></pre> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["mysql","frodo"]},{"location":"blog/2023/09/11/Django%20NoReverseMatch/","title":"Django NoReverseMatch","text":"<p>\u5728django\u7684\u540e\u53f0\u3002\u60f3\u5728\u5217\u8868\u91cc\u9762\u65b0\u589e\u4e00\u5217\uff0c\u4f5c\u4e3a\u8d85\u94fe\u63a5\u5230\u53e6\u4e00\u4e2a\u6a21\u578b\u7684change\u9875\u9762\u53bb</p>","tags":["python","django","simpleui"]},{"location":"blog/2023/09/11/Django%20NoReverseMatch/#1","title":"1\u3001\u62a5\u9519\u5982\u4e0b\uff1a","text":"<pre><code>Reverse for 'receive_ServerMetricExtendAnalysisData_change' not found. 'receive_ServerMetricExtendAnalysisData_change' is not a valid view function or pattern name.\n</code></pre>","tags":["python","django","simpleui"]},{"location":"blog/2023/09/11/Django%20NoReverseMatch/#2","title":"2\u3001\u9519\u8bef\u6e90\u5934","text":"<p>\u6211\u5f97\u9879\u76ee\u662f\u7528\u7684django\uff0cdrf\uff0csimpleui\uff0c\u7136\u540e\u8fd9\u4e2a\u64cd\u4f5c\u662f\u53d1\u751f\u5728django\u7684\u540e\u53f0\u3002\u60f3\u5728\u5217\u8868\u91cc\u9762\u65b0\u589e\u4e00\u5217\uff0c\u4f5c\u4e3a\u8d85\u94fe\u63a5\u5230\u53e6\u4e00\u4e2a\u6a21\u578b\u7684change\u9875\u9762\u53bb\u3002 <pre><code>from rest_framework.reverse import reverse\nfrom django.urls import reverse\n\ntarget_model_url = reverse('admin:receive_ServerMetricExtendAnalysisData_change', args=[smead_obj.id])\n</code></pre> \u8d77\u521d\u7684\u64cd\u4f5c\u662f\u8fd9\u6837\u7684\uff0c\u7136\u540e\u53cd\u590d\u62a5\u9519\uff0c\u4e5f\u770b\u4e86\u5b98\u7f51\u5173\u4e8ereverse\u7684\u89e3\u91ca\uff1ahttps://docs.djangoproject.com/zh-hans/4.2/ref/urlresolvers/#reverse-lazy\uff0c \u6700\u7ec8\u5c31\u662f\u59b9\u7684\u6ca1\u6709\u7528\uff0cdrf\u7684reverse\u8ddfdjango\u7684\u6ca1\u591a\u5927\u7684\u533a\u522b\uff0c\u8d77\u521d\u4ee5\u4e3a\u540e\u53f0\u4e0d\u80fd\u7528drf\u7684reverse\uff0c\u540e\u6765\u6d4b\u8bd5\u4e24\u8005\u90fd\u53ef\u4ee5\u3002</p>","tags":["python","django","simpleui"]},{"location":"blog/2023/09/11/Django%20NoReverseMatch/#3debug","title":"3\u3001\u5f00\u59cbdebug","text":"<p>\u6293\u4f4f target_model_url\uff0c\u53d1\u73b0\u4ed6\u59b9\u7684\uff0creverse\u652f\u6301\u4e24\u79cd\u53c2\u6570\u6a21\u5f0f\uff0c\u4e00\u79cd\u662f\u4e0d\u5e26\u53c2\u6570\uff0c\u4e00\u79cd\u5e26\u53c2\u6570</p> <p>admin:myapp_mymodel_change\uff0c\u6211\u6240\u914d\u7f6e\u7684mymodel\u540d\u5b57\u91cc\u9762\u6709\u5927\u5199\u5b57\u7b26\u7684\uff0cdebug\u51fa\u6765\u7684\u522b\u7684app\u7684name\u90fd\u662f\u5168\u5c0f\u5199\u7684\uff0c\u770b\u5230\u8fd9\u89c9\u5f97\u8fd9\u600e\u4e48\u8fd9\u4e48\u50bb\u903c\uff0c\u7acb\u9a6c\u6539\u4e86\u6211\u7684\u679c\u7136\u751f\u6548\u3002</p> <p></p>","tags":["python","django","simpleui"]},{"location":"blog/2023/09/11/Django%20NoReverseMatch/#4","title":"4\u3001\u9644\u4e0a\u6211\u53ef\u884c\u7684\u4e24\u79cd\u65b9\u5f0f","text":"<pre><code>target_model_url = f'/admin/receive/servermetricextendanalysisdata/{smead_obj.id}/change/'\nreturn format_html('&lt;a href=\"{}\"&gt;\u70b9\u51fb\u67e5\u770b\u7ed3\u679c&lt;/a&gt;', target_model_url)\n\nfrom django.urls import reverse\ntarget_model_url = reverse('admin:receive_servermetricextendanalysisdata_change', args=[smead_obj.id])\nreturn format_html('&lt;a href=\"{}\"&gt;\u70b9\u51fb\u67e5\u770b\u7ed3\u679c&lt;/a&gt;', target_model_url)\n</code></pre>","tags":["python","django","simpleui"]},{"location":"blog/2023/09/11/Django%20NoReverseMatch/#5","title":"5\u3001\u53c2\u8003","text":"<p>\u53cd\u67e5\u7ba1\u7406 URL\uff1ahttps://docs.djangoproject.com/zh-hans/3.2/ref/contrib/admin/#reversing-admin-urls</p> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["python","django","simpleui"]},{"location":"blog/2023/04/24/celery%E4%BC%A0%E5%8F%82%E6%97%B6%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2/","title":"celery\u4f20\u53c2\u65f6\u7684\u5bf9\u8c61\u8f6c\u6362","text":"<p>celery\u4f20\u53c2\u65f6\u7684\u5bf9\u8c61\u8f6c\u6362</p>","tags":["python","django","celery"]},{"location":"blog/2023/04/24/celery%E4%BC%A0%E5%8F%82%E6%97%B6%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2/#_1","title":"\u524d\u8a00","text":"<p>\u9047\u5230\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\uff0ccelery delay\u4f20\u5165SSH\u7684\u5bf9\u8c61\u65f6\uff0c\u62a5\u9519Object of type SSH is not JSON serializable\uff0c\u5206\u6790\u4e00\u4e0b\u5c31\u662f\u53ea\u80fd\u4f20json\u7684\u6570\u636e\u3002\u628a\u6240\u6709\u4f20\u5165\u7684\u6570\u636e\u90fd\u8f6c\u6210json\u3002</p>","tags":["python","django","celery"]},{"location":"blog/2023/04/24/celery%E4%BC%A0%E5%8F%82%E6%97%B6%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2/#1json","title":"1\u3001\u5bf9\u8c61\u8f6c\u6362json","text":"<p>\u56e0\u4e3a\u6211\u4f20\u9012\u7684\u662f \u5bf9\u8c61 \uff0c\u6240\u4ee5\u8981\u628a\u5bf9\u8c61\u8f6c\u6210 json\uff0c\u6240\u4ee5\u6211\u5c31\u81ea\u5b9a\u4e49\u4e86\u4e00\u4e2aJSONEncoder <pre><code>class MyEncoder(json.JSONEncoder):\n    def default(self, obj):\n        if isinstance(obj, SSH):\n            obj.__dict__['arguments']['pkey'] = None\n            return obj.__dict__\n</code></pre></p>","tags":["python","django","celery"]},{"location":"blog/2023/04/24/celery%E4%BC%A0%E5%8F%82%E6%97%B6%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2/#2json","title":"2\u3001json\u8f6c\u6210\u5bf9\u8c61","text":"<p>\u5728\u5f02\u6b65\u4efb\u52a1\u91cc\u9762\u53c8\u5c06json\u8f6c\u6210\u5bf9\u8c61 <pre><code>@app.task(name='receive_execute_command', base=CustomTask)\ndef execute_remote_command(client: json, scripts: str):\n    \"\"\"\n    \u5f02\u6b65\u6267\u884c\u8fdc\u7a0b\u811a\u672c\n    :param client:\n    :param scripts:\n    :return:\n    \"\"\"\n    client_json_to_dict = json.loads(client)\n    client_json_to_dict['arguments']['pkey'] = SSH.get_private_key()\n\n    new_client_obj = SSH(hostname='none', password='none')\n    new_client_obj.__dict__ = client_json_to_dict\n\n    res = new_client_obj.exec_command(scripts, timeout=5)\n    return res[1].decode('utf-8')\n</code></pre></p>","tags":["python","django","celery"]},{"location":"blog/2023/04/24/celery%E4%BC%A0%E5%8F%82%E6%97%B6%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2/#3","title":"3\u3001\u8fd9\u662f\u8c03\u7528\u5f02\u6b65","text":"<p><pre><code>        elif is_async:\n            client_to_json = json.dumps(client, cls=MyEncoder, indent=4)\n            execute_remote_command.delay(client_to_json, scripts)\n            return ['0', '\u5f02\u6b65\u6267\u884c\u4e2d\u3002'.encode('utf-8')]\n</code></pre> \u7ed3\u8bba\u5c31\u662fcelery\u7684\u5f62\u53c2\u4e0d\u80fd\u662f\u5bf9\u8c61\u3002</p>","tags":["python","django","celery"]},{"location":"blog/2023/04/24/celery%E4%BC%A0%E5%8F%82%E6%97%B6%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2/#4__dict__-magic","title":"4\u3001\u6269\u5c55\u4e00\u4e0b__dict__ \uff08magic\u65b9\u6cd5\uff09","text":"<p>\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u67e5\u770b\u7c7b\u4e2d\u5305\u542b\u54ea\u4e9b\u5c5e\u6027\uff0cPython \u7c7b\u63d0\u4f9b\u4e86 dict \u5c5e\u6027\u3002\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u8be5\u5c5e\u6027\u53ef\u4ee5\u7528\u7c7b\u540d\u6216\u8005\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u6765\u8c03\u7528\uff1a</p> <ul> <li> <p>\u7528\u7c7b\u540d\u76f4\u63a5\u8c03\u7528 dict\uff0c\u4f1a\u8f93\u51fa\u8be5\u7531\u7c7b\u4e2d\u6240\u6709\u7c7b\u5c5e\u6027\u7ec4\u6210\u7684\u5b57\u5178\uff1b</p> </li> <li> <p>\u800c\u4f7f\u7528\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528 dict\uff0c\u4f1a\u8f93\u51fa\u7531\u7c7b\u4e2d\u6240\u6709\u5b9e\u4f8b\u5c5e\u6027\u7ec4\u6210\u7684\u5b57\u5178\u3002</p> </li> </ul> <p>\u5bf9\u4e8e\u5177\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7236\u7c7b\u548c\u5b50\u7c7b\u6765\u8bf4\uff0c\u7236\u7c7b\u6709\u81ea\u5df1\u7684 dict\uff0c\u540c\u6837\u5b50\u7c7b\u4e5f\u6709\u81ea\u5df1\u7684 dict\uff0c\u5b83\u4e0d\u4f1a\u5305\u542b\u7236\u7c7b\u7684 dict\u3002</p> <p>\u53ef\u4ee5\u53c2\u8003\uff1ahttp://c.biancheng.net/view/2374.html</p> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["python","django","celery"]},{"location":"blog/2023/06/20/django%20orm%20NoneType%20object%20is%20not%20iterable/","title":"django orm 'NoneType' object is not iterable","text":"<p>django orm 'NoneType' object is not iterable</p>","tags":["django","orm"]},{"location":"blog/2023/06/20/django%20orm%20NoneType%20object%20is%20not%20iterable/#1","title":"1\u3001\u62a5\u9519\u622a\u56fe","text":"<p>\u5f53\u5c0f\u4f19\u4f34\u4eec\u9047\u5230\u8fd9\u79cd\u6c99\u96d5\u95ee\u9898\u65f6\u662f\u4e0d\u662f\u4e5f\u662f\u5f88\u70e6\u8e81? </p>","tags":["django","orm"]},{"location":"blog/2023/06/20/django%20orm%20NoneType%20object%20is%20not%20iterable/#2traceback","title":"2\u3001\u5206\u6790Traceback","text":"<p>\u53d1\u73b0\u6709\u719f\u6089\u7684\uff0c\u6211\u91cd\u5199\u4e86admin.ModelAdmin\u7684save_related\u65b9\u6cd5\uff0c\u5206\u6790\u5e94\u8be5\u662f\u518d\u591a\u5bf9\u591a\u4fdd\u5b58\u65f6\u51fa\u73b0\u4e86\u95ee\u9898\u3002 </p> <p></p>","tags":["django","orm"]},{"location":"blog/2023/06/20/django%20orm%20NoneType%20object%20is%20not%20iterable/#3scripts","title":"3\u3001\u770b\u4e0a\u53bb\u597d\u50cf\u662fscripts\u8fd9\u4e2a\u5b57\u6bb5\u5728\u4fdd\u5b58\u65f6\u51fa\u73b0\u4e86\u95ee\u9898\u3002\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u5b57\u6bb5\u5728\u540e\u53f0\u4e5f\u505a\u4e86\u4e00\u4e2a\u8868\u5355\u9a8c\u8bc1\u3002","text":"<p>  \u5728\u6821\u9a8cscripts\u8fd9\u4e2a\u5b57\u6bb5\u65f6\uff0c\u5f53job_type==2\u65f6\u6ca1\u6709\u5bf9\u5e94\u7684\u8fd4\u56de\uff0c\u6240\u4ee5job_type==1\u6bcf\u6b21\u90fd\u6210\u529f\u4e86\uff0c2\u90fd\u662f\u5931\u8d25\u7684\u3002</p>","tags":["django","orm"]},{"location":"blog/2023/06/20/django%20orm%20NoneType%20object%20is%20not%20iterable/#4clean_-fieldname","title":"4\u3001clean_ &lt; fieldname &gt;()","text":"<p>\u65b9\u6cd5\u662f\u5728\u8868\u5355\u5b50\u7c7b\u4e0a\u8c03\u7528\u7684\u2014\u2014\u5176\u4e2d &lt; fieldname &gt; \u88ab\u66ff\u6362\u4e3a\u8868\u5355\u5b57\u6bb5\u5c5e\u6027\u7684\u540d\u79f0\u3002\u8fd9\u4e2a\u65b9\u6cd5\u505a\u4efb\u4f55\u7279\u5b9a\u5c5e\u6027\u7684\u6e05\u7406\u5de5\u4f5c\uff0c\u4e0e\u5b57\u6bb5\u7684\u7c7b\u578b\u65e0\u5173\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u4f20\u9012\u4efb\u4f55\u53c2\u6570\u3002\u4f60\u9700\u8981\u5728 self.cleaned_data \u4e2d\u67e5\u627e\u5b57\u6bb5\u7684\u503c\uff0c\u5e76\u4e14\u8bb0\u4f4f\uff0c\u6b64\u65f6\u5b83\u5c06\u662f\u4e00\u4e2a Python \u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u5728\u8868\u5355\u4e2d\u63d0\u4ea4\u7684\u539f\u59cb\u5b57\u7b26\u4e32\uff08\u5b83\u5c06\u5728 cleaned_data \u4e2d\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u4e00\u822c\u5b57\u6bb5 clean() \u65b9\u6cd5\u5df2\u7ecf\u6e05\u7406\u4e86\u4e00\u6b21\u6570\u636e\uff09\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u9a8c\u8bc1\u4e00\u4e2a\u53eb serialnumber \u7684 CharField \u7684\u5185\u5bb9\u662f\u552f\u4e00\u7684\uff0cclean_serialnumber() \u5c31\u53ef\u4ee5\u505a\u8fd9\u4ef6\u4e8b\u3002\u4f60\u4e0d\u9700\u8981\u4e00\u4e2a\u7279\u5b9a\u7684\u5b57\u6bb5\uff08\u5b83\u662f\u4e00\u4e2a CharField\uff09\uff0c\u4f46\u4f60\u9700\u8981\u4e00\u4e2a\u7279\u5b9a\u5b57\u6bb5\u7684\u9a8c\u8bc1\uff0c\u53ef\u80fd\u7684\u8bdd\uff0c\u6e05\u7406\uff0f\u89c4\u8303\u6570\u636e\u3002</p> <p>\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4f1a\u66ff\u6362 cleaned_data \u4e2d\u7684\u73b0\u6709\u503c\uff0c\u6240\u4ee5\u5b83\u5fc5\u987b\u662f cleaned_data \u4e2d\u7684\u5b57\u6bb5\u503c\uff08\u5373\u4f7f\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u6539\u53d8\u5b83\uff09\u6216\u4e00\u4e2a\u65b0\u7684\u5e72\u51c0\u503c\u3002</p>","tags":["django","orm"]},{"location":"blog/2023/06/20/django%20orm%20NoneType%20object%20is%20not%20iterable/#5","title":"5\u3001\u53c2\u8003\u6587\u6863","text":"<pre><code>https://docs.djangoproject.com/zh-hans/3.2/ref/forms/validation/\n</code></pre> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["django","orm"]},{"location":"blog/2023/06/09/drf%E5%A4%96%E9%94%AE%E5%BA%8F%E5%88%97%E5%8C%96/","title":"drf\u5916\u952e\u5e8f\u5217\u5316","text":"<p>drf\u5916\u952e\u5e8f\u5217\u5316</p>","tags":["django","drf"]},{"location":"blog/2023/06/09/drf%E5%A4%96%E9%94%AE%E5%BA%8F%E5%88%97%E5%8C%96/#_1","title":"\u524d\u8a00","text":"<p>\u5728Django REST Framework\uff08DRF\uff09\u4e2d\uff0c\u5916\u952e\u5b57\u6bb5\u53ef\u4ee5\u901a\u8fc7\u5e8f\u5217\u5316\u5668\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002</p>","tags":["django","drf"]},{"location":"blog/2023/06/09/drf%E5%A4%96%E9%94%AE%E5%BA%8F%E5%88%97%E5%8C%96/#1","title":"1\u3001\u6a21\u578b\u611f\u53d7\u4e00\u4e0b\uff1a","text":"<pre><code>from django.db import models\n\nclass Author(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n\nclass Book(models.Model):\n    title = models.CharField(max_length=200)\n    author = models.ForeignKey(Author, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n</code></pre>","tags":["django","drf"]},{"location":"blog/2023/06/09/drf%E5%A4%96%E9%94%AE%E5%BA%8F%E5%88%97%E5%8C%96/#2","title":"2\u3001\u5e8f\u5217\u5316","text":"<p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cBook\u6a21\u578b\u6709\u4e00\u4e2a\u5916\u952e\u5b57\u6bb5\u6307\u5411Author\u6a21\u578b\u3002\u5728BookSerializer\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528source\u53c2\u6570\u6765\u6307\u5b9a\u5916\u952e\u5b57\u6bb5\u5bf9\u5e94\u7684\u5173\u8054\u6a21\u578b\u4e2d\u7684\u5b57\u6bb5\u3002\u4f8b\u5982\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528source='author.name'\u5c06\u4f5c\u8005\u540d\u5b57\u7684\u5b57\u6bb5\u6620\u5c04\u5230author_name\u5b57\u6bb5\u3002</p> <p>\u5728AuthorSerializer\u4e2d\uff0c\u6211\u4eec\u5305\u542b\u4e86\u4e00\u4e2a\u5d4c\u5957\u7684BookSerializer\uff0c\u4ee5\u4fbf\u5e8f\u5217\u5316\u4e0e\u8be5\u4f5c\u8005\u76f8\u5173\u8054\u7684\u6240\u6709\u4e66\u7c4d\u3002 <pre><code>from rest_framework import serializers\nfrom myapp.models import Author, Book\n\nclass BookSerializer(serializers.ModelSerializer):\n    author_name = serializers.CharField(source='author.name')\n\n    class Meta:\n        model = Book\n        fields = ['id', 'title', 'author_name']\n\nclass AuthorSerializer(serializers.ModelSerializer):\n    books = BookSerializer(many=True)\n\n    class Meta:\n        model = Author\n        fields = ['id', 'name', 'books']\n</code></pre></p> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["django","drf"]},{"location":"blog/2023/08/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E7%BB%93%E6%9E%84%E4%BD%93/","title":"golang\u5b57\u7b26\u4e32\u8f6c\u7ed3\u6784\u4f53","text":"<p>golang\u5b57\u7b26\u4e32\u8f6c\u7ed3\u6784\u4f53</p>","tags":["golang"]},{"location":"blog/2023/08/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E7%BB%93%E6%9E%84%E4%BD%93/#1","title":"1\u3001\u4e0d\u77e5\u9053\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u60c5\u51b5\u4e0b","text":"<p><pre><code>func JsonStringToMap(jsonStr string) (map[string]interface{}, error) {\n    //\u672a\u77e5\u503c\u7c7b\u578b\n    m := make(map[string]interface{})\n    err := json.Unmarshal([]byte(jsonStr), &amp;m)\n    if err != nil {\n        fmt.Printf(\"Unmarshal with error: %+v\\n\", err)\n        return nil, err\n    }\n\n    return m, nil\n}\n\n\nres := JsonStringToMap(response.ToJsonString())\nresp, ok := res[\"Response\"].(map[string]interface{})\nif ok {\n    for _, v := range resp[\"Machines\"].([]interface {}){\n        fmt.Println(v.(map[string]interface{})[\"Ip\"])\n        fmt.Println(v.(map[string]interface{})[\"Status\"])\n    }\n}\n</code></pre> \u6162\u6162\u65ad\u8a00\u62c6\u6570\u636e\uff0c\u5c5e\u5b9e\u5f88\u9ebb\u70e6\u3002</p>","tags":["golang"]},{"location":"blog/2023/08/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E7%BB%93%E6%9E%84%E4%BD%93/#2","title":"2\u3001\u5728\u77e5\u9053\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u60c5\u51b5\u4e0b","text":"<p><pre><code>func JsonStringToMap_v2(jsonStr string)  {\n    //\u672a\u77e5\u503c\u7c7b\u578b\n    var dmrp cls.DescribeMachinesResponse\n\n    err := json.Unmarshal([]byte(jsonStr), &amp;dmrp)\n    if err != nil {\n        fmt.Printf(\"Unmarshal with error: %+v\\n\", err)\n    }\n\n    for _,v := range dmrp.Response.Machines {\n        fmt.Println(*v.Ip)\n        fmt.Println(*dmrp.Response.AutoUpdate)\n    }\n}\n</code></pre> \u76f8\u5bf9\u65b9\u4fbf\u591a\u4e86\u3002 \u521a\u5f00\u59cb\u627e\u4e86\u7b2c\u4e00\u79cd\u529e\u6cd5\uff0c\u611f\u89c9\u592a\u9ebb\u70e6\uff0c\u4e4b\u540e\u53d1\u73b0\u7b2c\u4e8c\u79cd\u529e\u6cd5\uff0c\u7528\u4e86\u7b2c\u4e8c\u79cd\u529e\u6cd5\u540e\u53d1\u73b0\u5728\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u91cc\u9762\u76f4\u63a5\u53ef\u4ee5\u4f7f\u7528\u672a\u8f6c\u6210json\u4e32\u4e4b\u524d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e0d\u719f\u6089\u7684\u4ee3\u4ef7\u5c31\u662f\u82b1\u65f6\u95f4\u6298\u817e\u3002</p>","tags":["golang"]},{"location":"blog/2023/08/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E7%BB%93%E6%9E%84%E4%BD%93/#3","title":"3\u3001\u901a\u7528\u65b9\u5f0f","text":"<p>\u4e00\u4e2a\u901a\u7528\u7684\u7ed3\u6784\u4f53\uff0c\u4e0d\u7ba1\u6765\u6e90\u7684\u7c7b\u578b\uff0cData\u91cc\u9762\u5305\u542b\u7684\u662f\u5404\u79cd\u6570\u636e\u7c7b\u578b\u3002\u5f53interface\u91cc\u9762\u662f\u4e00\u4e2amap\u65f6\uff0c\u60f3\u77e5\u9053map\u4e2d\u5bf9\u5e94\u7684value\uff0c\u9700\u8981\u591a\u5c42\u65ad\u8a00\uff0c\u5148\u65ad\u51faData\uff0c\u83b7\u53d6\u5230Data\u7684\u6570\u636e\u540e\uff0c\u518d\u65adprocess_name\u548cidentify_pid\u3002</p> <pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n)\n\ntype TransmittedData struct {\n    Data  interface{} `json:\"data\"`\n    Scene string      `json:\"scene\"`\n}\n\nfunc main() {\n    postData := []byte(`\n    {\n        \"data\": {\n            \"process_name\": \"serverMetricExtend\",\n            \"identify_pid\": \"ps -ef|grep serverMetricE|grep -v grep |awk '{print $2}'\"\n        },\n        \"scene\": \"process_monitor\"\n    }\n    `)\n\n    var transmittedData TransmittedData\n    err := json.Unmarshal(postData, &amp;transmittedData)\n    if err != nil {\n        fmt.Println(\"Error:\", err)\n        return\n    }\n\n    data, ok := transmittedData.Data.(map[string]interface{})\n    if !ok {\n        fmt.Println(\"Error: Data is not a map\")\n        return\n    }\n\n    processName, ok := data[\"process_name\"].(string)\n    if !ok {\n        fmt.Println(\"Error: Process Name is not a string\")\n        return\n    }\n\n    identifyPid, ok := data[\"identify_pid\"].(string)\n    if !ok {\n        fmt.Println(\"Error: Identify PID is not a string\")\n        return\n    }\n\n    fmt.Println(\"Process Name:\", processName)\n    fmt.Println(\"Identify PID:\", identifyPid)\n    fmt.Println(\"Scene:\", transmittedData.Scene)\n}\n</code></pre> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["golang"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/","title":"simpleui layer\u81ea\u52a8\u52a0\u8f7d","text":"<p>\u5f53\u4f60\u4f7f\u7528simpleui layer \u65f6\u80af\u5b9a\u4f1a\u9047\u5230\u66f4\u65b0\u4e86\u6570\u636e\u5e93\u6570\u636e\u540e\uff0clayer\u4e2d\u7684\u6570\u636e\u5e76\u6ca1\u6709\u81ea\u52a8\u66f4\u65b0\u7684\u60c5\u51b5\u3002</p>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#_1","title":"\u524d\u8a00","text":"<p>\u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u4e0d\u4f1a\u6709\u5f88\u591a\u540c\u5b66\u9047\u5230\uff0c\u4f46\u662f\u5982\u679c\u9047\u5230\u4e86\u53ef\u4ee5\u53c2\u8003\u89e3\u51b3\u3002</p> <p>\u5f53\u4f60\u4f7f\u7528simpleui layer \u65f6\u80af\u5b9a\u4f1a\u9047\u5230\u66f4\u65b0\u4e86\u6570\u636e\u5e93\u6570\u636e\u540e\uff0clayer\u4e2d\u7684\u6570\u636e\u5e76\u6ca1\u6709\u81ea\u52a8\u66f4\u65b0\u7684\u60c5\u51b5\u3002\u800c\u5f53\u4f60\u66f4\u65b0\u89e3\u51b3\u5b8c\u6570\u636e\u81ea\u52a8\u66f4\u65b0\u4e4b\u540e\uff0c\u5f88\u6709\u53ef\u80fd\u4f1a\u5f15\u51fa\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u5f53\u6a21\u578b\u7ed3\u6784\u53d1\u751f\u53d8\u66f4\u65f6\uff0c\u6070\u597d\u81ea\u52a8\u66f4\u65b0layer\u7684\u65f6\u5019\u9700\u8981\u4f9d\u8d56\u8fd9\u4e2a\u6a21\u578b\uff0c\u563f\u563f\uff0c\u90a3\u4f60\u5c31\u4f1a\u5728migrate\u7684\u65f6\u5019\u62a5\u9519\uff0c\u7c7b\u4f3c\uff1a <pre><code>django.db.utils.OperationalError: (1054, \"Unknown column 'assets_DomainList.cloud_certificate_id' in 'field list'\")\n</code></pre></p>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#1layer","title":"1\u3001\u81ea\u52a8\u66f4\u65b0layer\u6570\u636e","text":"<p>\u901a\u8fc7admin_action\u88c5\u9970\u5668\u5c06layer\u6240\u9700\u8981\u7684\u5c5e\u6027\u90fd\u8fdb\u884c\u8d4b\u503c\u3002</p>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#11layer","title":"1.1\u3001\u751f\u6210layer","text":"","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#111","title":"1.1.1\u3001\u6309\u94ae","text":"<pre><code>@admin_action(short_description='\u5bfc\u5165\u57df\u540d\u5217\u8868', _type='success', icon='el-icon-s-promotion',\n                 layer=ImportDomainListLayer()())\n   def import_domain_list(self, request, queryset):\n       return JsonResponse(data={\n           'status': 'success',\n           'msg': '\u5904\u7406\u6210\u529f\uff01'\n       })\n</code></pre>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#112layer","title":"1.1.2\u3001layer\u88c5\u9970\u5668","text":"<pre><code>def admin_action(short_description=None, icon=None, _type=None, confirm=None, style=None, layer=None):\n    \"\"\"\n    \u540e\u53f0action\u5c5e\u6027\u88c5\u9970\u5668\n    :param layer:\n    :param style:\n    :param short_description:\n    :param icon:\n    :param _type:\n    :param confirm:\n    :return:\n    \"\"\"\n    def decorator(func):\n        func.short_description = short_description\n        func.icon = icon\n        func.type = _type\n        func.confirm = confirm\n        func.style = style\n        func.layer = layer\n\n        @wraps(func)\n        def wrapper(*args, **kwargs):\n            return func(*args, **kwargs)\n\n        return wrapper\n\n    return decorator\n</code></pre>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#113layer","title":"1.1.3\u3001\u5408\u6210layer\u7684\u7c7b","text":"<pre><code>class ImportDomainListLayer:\n    def __init__(self):\n        self.layer = {\n            'title': '\u5bfc\u5165\u57df\u540d\u548c\u8bb0\u5f55',\n            'tips': '\u6e05\u7a7a\u4e4b\u540e\u91cd\u65b0\u5bfc\u5165,\u4e0d\u540c\u51ed\u8bc1\u5bf9\u5e94\u4e0d\u540c\u7684\u5e73\u53f0\u3002',\n            'confirm_button': '\u786e\u8ba4\u63d0\u4ea4',\n            'cancel_button': '\u53d6\u6d88',\n            'width': '40%',\n            'labelWidth': \"80px\",\n            'params': []\n        }\n        self.dst_cloud_select = {\n            'type': 'select',\n            'key': 'dst_cloud',\n            'label': '\u76ee\u6807\u4e91\u5e73\u53f0\u51ed\u8bc1',\n            'size': 'small',\n            'options': []\n        }\n\n    def generate_layer(self):\n        self.dst_cloud_select['options'] = [{'key': cc.id, 'label': cc.name} for cc in CloudCertificate.objects.all()]\n        self.layer['params'] = [\n            self.dst_cloud_select,\n        ]\n        return self.layer\n\n    @admin_layer_load\n    def __call__(self, *args, **kwargs):\n        return self.generate_layer()\n</code></pre>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#12layer","title":"1.2\u3001\u81ea\u52a8\u66f4\u65b0layer\u6570\u636e","text":"<p>\u901a\u8fc7\u4fe1\u53f7\u5728\u4f9d\u8d56\u7684\u6a21\u578b\u6bcf\u6b21\u65b0\u589e\u6570\u636e\u540e\u81ea\u52a8\u5237\u65b0layer\u5c5e\u6027\u6570\u636e\u3002</p>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#121","title":"1.2.1\u3001\u4fe1\u53f7\u51fd\u6570","text":"<pre><code>@receiver(post_delete, sender=CloudCertificate, dispatch_uid='post_delete_CloudCertificate')\ndef del_import_domain_list_layer(sender, **kwargs):\n    logger.info(\"CloudCertificate del \u89e6\u53d1\u4fe1\u53f7\u3002\")\n    DomainListMixins.import_domain_list.layer = ImportDomainListLayer()()\n</code></pre>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#2migratelayer","title":"2\u3001\u5728migrate\u65f6layer\u4e0d\u81ea\u52a8\u52a0\u8f7d","text":"<p>\u601d\u8def\u5c31\u662f\u5728migrate\u7684\u65f6\u5019\u5ffd\u7565\u6389layer\u7684\u52a0\u8f7d\u3002</p>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#21","title":"2.1\u3001\u63a7\u5236\u4e0d\u52a0\u8f7d\u7684\u88c5\u9970\u5668","text":"<pre><code>def admin_layer_load(func):\n    \"\"\"\n    \u5728migrate\u6a21\u5f0f\u4e0b\uff0c\u4e0d\u52a0\u8f7dlayer\n    :param func:\n    :return:\n    \"\"\"\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        return 'pass' if 'migrate' in sys.argv else func(*args, **kwargs)\n    return wrapper\n</code></pre>","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/01/29/simpleui%20layer%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD/#22layer","title":"2.2\u3001\u5728\u8c03\u7528layer\u7684\u65f6\u5019\u52a0\u5165\u5224\u65ad","text":"<pre><code>@admin_layer_load\ndef __call__(self, *args, **kwargs):\n    return self.generate_layer()\n</code></pre> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["simpleui","django","\u4fe1\u53f7"]},{"location":"blog/2024/08/05/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/","title":"mysql\u6570\u636e\u5e93\u6743\u9650\u6821\u9a8c","text":"<p>mysql\u6570\u636e\u5e93\u6743\u9650\u6821\u9a8c</p>","tags":["golang","mysql","\u6570\u636e\u5e93\u8fc1\u79fb"]},{"location":"blog/2024/08/05/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/#_1","title":"\u524d\u8a00","text":"<p>\u8fc1\u79fbmysql\u6570\u636e\u5e93\u540e\uff0c\u6821\u9a8c\u6743\u9650\u4e5f\u662f\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u5e93\u5927\u51e0\u5341\u4e2a\u8d26\u53f7\uff0c\u4e0d\u53ef\u80fd\u53bb\u4e00\u4e2a\u4e2a\u6821\u9a8c\u7684\uff0c\u6240\u4ee5\u5c31\u641e\u4e86\u4e2a\u6821\u9a8c\u7684\u5c0f\u811a\u672c\uff0c\u901a\u8fc7\u5bf9\u6bd4\u4e24\u4e2a\u5e93\u7684\u6240\u6709\u8d26\u53f7\u7684md5\u8fdb\u884c\u6bd4\u5bf9\u3002</p>","tags":["golang","mysql","\u6570\u636e\u5e93\u8fc1\u79fb"]},{"location":"blog/2024/08/05/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/#1","title":"1\u3001\u4ee3\u7801\u5982\u4e0b","text":"\u4ee3\u7801 <pre><code>package main\n\nimport (\n\"context\"\n\"crypto/md5\"\n\"database/sql\"\n\"encoding/hex\"\n\"fmt\"\n\"log\"\n\"os\"\n\"os/signal\"\n\"strings\"\n\"time\"\n\n_ \"github.com/go-sql-driver/mysql\"\n)\n\ntype DBConfig struct {\nUser     string\nPassword string\nHost     string\nPort     string\nName     string\n}\n\ntype Database struct {\npool *sql.DB\n}\n\nfunc NewDatabase(config DBConfig) (*Database, error) {\ndsn := fmt.Sprintf(\"%s:%s@tcp(%s:%s)/%s?timeout=5s\",\n    config.User, config.Password, config.Host, config.Port, config.Name)\n\npool, err := sql.Open(\"mysql\", dsn)\nif err != nil {\n    return nil, fmt.Errorf(\"unable to use data source name: %w\", err)\n}\n\npool.SetConnMaxLifetime(0)\npool.SetMaxIdleConns(3)\npool.SetMaxOpenConns(3)\n\nreturn &amp;Database{pool: pool}, nil\n}\n\nfunc (db *Database) Close() {\ndb.pool.Close()\n}\n\nfunc (db *Database) Ping(ctx context.Context) error {\nctx, cancel := context.WithTimeout(ctx, 1*time.Second)\ndefer cancel()\nreturn db.pool.PingContext(ctx)\n}\n\nfunc (db *Database) QueryGetAllUsers(ctx context.Context) []string {\nctx, cancel := context.WithTimeout(ctx, 5*time.Second)\ndefer cancel()\n\nrows, err := db.pool.QueryContext(ctx, \"SELECT CONCAT('''', user, '''', '@', '''', host, '''') AS user_grant FROM mysql.user;\")\nif err != nil {\n    fmt.Errorf(\"unable to execute search query: %w\", err)\n}\ndefer rows.Close()\n\nvar all_users []string\nfor rows.Next() {\n    var userGrant string\n    if err := rows.Scan(&amp;userGrant); err != nil {\n    fmt.Errorf(\"error scanning row: %w\", err)\n    }\n    userGrantstr := fmt.Sprintf(\"SHOW GRANTS FOR %s;\", userGrant)\n    all_users = append(all_users, userGrantstr)\n}\n\nreturn all_users\n}\n\nfunc (db *Database) QueryGetAllUsersGrant(ctx context.Context, grantUsersSql []string) map[string][]string {\nctx, cancel := context.WithTimeout(ctx, 5*time.Second)\ndefer cancel()\n\ngrantUsersSqlmap := make(map[string][]string)\n\naddgrantUsersSqlmap := func(key string, value string) {\n    if _, exists := grantUsersSqlmap[key]; exists {\n    grantUsersSqlmap[key] = append(grantUsersSqlmap[key], value)\n    } else {\n    grantUsersSqlmap[key] = []string{value}\n    }\n}\n\nfor _, v := range grantUsersSql {\n    rows, _ := db.pool.QueryContext(ctx, v)\n    for rows.Next() {\n    var userGrant string\n    if err := rows.Scan(&amp;userGrant); err != nil {\n        fmt.Errorf(\"error scanning row: %w\", err)\n    }\n    addgrantUsersSqlmap(v, userGrant)\n    }\n}\nreturn grantUsersSqlmap\n}\n\nfunc SetupSignalHandler(stop context.CancelFunc) {\nappSignal := make(chan os.Signal, 3)\nsignal.Notify(appSignal, os.Interrupt)\n\ngo func() {\n    &lt;-appSignal\n    stop()\n}()\n}\n\nfunc contains(sql_slice []string, sql string) bool {\nfor i := 0; i &lt; len(sql_slice); i++ {\n    if sql == sql_slice[i] {\n    return true\n    }\n}\nreturn false\n}\n\nfunc calculateMD5(data []string) string {\ncombined := strings.Join(data, \",\")\nhash := md5.New()\nhash.Write([]byte(combined))\nreturn hex.EncodeToString(hash.Sum(nil))\n}\n\nfunc generateUserGrantMd5(grant_map map[string][]string) map[string]string {\ngrantUsersSqlmapMd5 := make(map[string]string)\nfor key, value := range grant_map {\n    res := calculateMD5(value)\n    grantUsersSqlmapMd5[key] = res\n}\nreturn grantUsersSqlmapMd5\n}\n\nfunc DbM(ctx context.Context, dbconf DBConfig) ([]string, map[string][]string, map[string]string) {\nnew_db_config := dbconf\ndb, err := NewDatabase(new_db_config)\nif err != nil {\n    log.Fatal(err)\n}\ndefer db.Close()\n\nif err := db.Ping(ctx); err != nil {\n    log.Fatal(err)\n}\n\ngrant_sql_slice := db.QueryGetAllUsers(ctx)\ngrant_sql_map := db.QueryGetAllUsersGrant(ctx, grant_sql_slice)\nguam := generateUserGrantMd5(grant_sql_map)\nreturn grant_sql_slice, grant_sql_map, guam\n}\n\nfunc checkDataBaseGrant(ctx context.Context) {\n// \u65b0db\ngrant_sql_slice, grant_sql_map, guam := DbM(ctx, DBConfig{\n    User:     \"xxxxxx\",\n    Password: \"xxxxxx\",\n    Host:     \"xxxxxx\",\n    Port:     \"3306\",\n    Name:     \"xxxxxx\",\n})\n// \u8001db\ngrant_sql2_slice, grant_sql2_map, guam2 := DbM(ctx, DBConfig{\n    User:     \"xxxxxx\",\n    Password: \"xxxxxx\",\n    Host:     \"xxxxxx\",\n    Port:     \"3306\",\n    Name:     \"xxxxxx\",\n})\n\n// \u8001db\u91cc\u9762\u6709\uff0c\u65b0db\u91cc\u9762\u6ca1\u6709\u7684\u8868\nfor i := 0; i &lt; len(grant_sql2_slice); i++ {\n    res := contains(grant_sql_slice, grant_sql2_slice[i])\n    if res == false {\n    fmt.Printf(\"\u5728\u8001db\uff1a%s \u4e0d\u5728\u65b0db\\n\", grant_sql2_slice[i])\n    }\n}\n\n// \u5224\u65ad\u5bf9\u5e94\u8868\u7684\u6743\u9650\u7684md5\u662f\u5426\u4e00\u6837\nfor key, _ := range guam {\n    if guam[key] != guam2[key] {\n    fmt.Printf(\"%s\u6743\u9650\u4e0d\u4e00\u81f4\\n\", key)\n    fmt.Printf(\"\u65b0db\u6743\u9650:\\n%s\\n\", grant_sql_map[key])\n    fmt.Printf(\"\u8001db\u6743\u9650:\\n%s\\n\", grant_sql2_map[key])\n    fmt.Println(\"====================================================================\")\n    }\n}\n}\n\nfunc main() {\nctx, stop := context.WithCancel(context.Background())\ndefer stop()\nSetupSignalHandler(stop)\ncheckDataBaseGrant(ctx)\n}\n</code></pre>","tags":["golang","mysql","\u6570\u636e\u5e93\u8fc1\u79fb"]},{"location":"blog/2024/08/05/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/#2","title":"2\u3001\u4f7f\u7528\u8bf4\u660e","text":"<p>\u6709\u4e24\u4e2a\u8fd9\u4e2a\u914d\u7f6e\uff0c\u4e00\u4e2a\u65b0\u5e93\uff0c\u4e00\u4e2a\u8001\u5e93\uff0c\u522b\u7684\u65e0\u9700\u4fee\u6539\uff0c\u7136\u540e\u53ef\u4ee5\u76f4\u63a5go run \u6267\u884c\uff0cgo\u7684\u7248\u672c\u662f1.21\u3002 <pre><code>DBConfig{\n        User:     \"xxxxxx\",\n        Password: \"xxxxxx\",\n        Host:     \"xxxxxx\",\n        Port:     \"3306\",\n        Name:     \"xxxxxx\",\n    }\n</code></pre></p> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["golang","mysql","\u6570\u636e\u5e93\u8fc1\u79fb"]},{"location":"blog/2023/08/08/golang%E5%AE%9A%E6%97%B6%E5%99%A8/","title":"prometheus\u7684sdk client_golang \u4f7f\u7528 \u5b9a\u65f6\u5668","text":"<p>\u4e4b\u524d\u7ebf\u4e0a\u76d1\u63a7\u7684agent\u90fd\u662f\u76f4\u63a5  time.Sleep(time.Duration(collectInterval) * time.Second) ,\u591a\u5c11\u6709\u4e9b\u8bb8\u7684low\uff0c\u6bcf\u6b21\u5f00\u59cb\u91c7\u96c6\u6570\u636e\u7684\u65f6\u95f4\u90fd\u662f\u4ece\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u5c31\u5f00\u59cb\u91c7\u96c6\uff0c\u5f88\u663e\u7136\u8fd9\u79cd\u5077\u61d2\u7684\u65b9\u5f0f\u662f\u4e0d\u5408\u7406\u7684\u3002</p>","tags":["prometheus","monitor","golang"]},{"location":"blog/2023/08/08/golang%E5%AE%9A%E6%97%B6%E5%99%A8/#1","title":"1\u3001\u666e\u901a\u7684\u65f6\u95f4\u95f4\u9694\u793a\u4f8b","text":"<pre><code>func AbNormalLoglistener(collectInterval int)  {\n    abnormal_loglistener_Gauge := prometheus.NewGaugeVec(\n        prometheus.GaugeOpts{\n            Namespace: \"tc\",\n            Subsystem: \"serverMetricExtend\",\n            Name:      \"abnormal_loglistener_log\",\n            Help:      \"Loglistener An exception exists in the log file.\",\n        },\n        []string{\n            \"hostname\",\n            \"alert_name\",\n        },\n    )\n    prometheus.MustRegister(abnormal_loglistener_Gauge)\n\n    _t := tools.Server{}\n    sname := _t.GetServerHostName()\n\n    go func() {\n        defer func() {\n            if r := recover(); r != nil {\n                metricLog.Error(r)\n            }\n        }()\n\n        ticker := time.NewTicker(time.Duration(collectInterval) * time.Second)\n        now := time.Now()\n        nextMinute := now.Truncate(time.Duration(collectInterval) * time.Second).Add(time.Duration(collectInterval) * time.Second)\n        waitTime := nextMinute.Sub(now)\n        time.Sleep(waitTime)\n\n        for {\n            metricsBack := _t.FetchDirModTime()\n            for alert_name, status := range metricsBack{\n                abnormal_loglistener_Gauge.With(prometheus.Labels{\"hostname\": sname, \"alert_name\": alert_name}).Set(float64(status))\n            }\n\n            &lt;-ticker.C\n            nextMinute = nextMinute.Add(time.Duration(collectInterval) * time.Second)\n            waitTime = nextMinute.Sub(time.Now())\n            time.Sleep(waitTime)\n\n        }\n    }()\n}\n</code></pre>","tags":["prometheus","monitor","golang"]},{"location":"blog/2023/08/08/golang%E5%AE%9A%E6%97%B6%E5%99%A8/#2-timeticker","title":"2\u3001\u65b9\u5f0f\u4e00 time.Ticker","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    // \u521b\u5efa\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u6bcf\u9694\u4e00\u5206\u949f\u89e6\u53d1\u4e00\u6b21\n    ticker := time.NewTicker(time.Minute)\n\n    // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\n    now := time.Now()\n\n    // \u8ba1\u7b97\u4e0b\u4e00\u5206\u949f\u7684\u5f00\u59cb\u65f6\u95f4\n    nextMinute := now.Truncate(time.Minute).Add(time.Minute)\n\n    // \u8ba1\u7b97\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\n    waitTime := nextMinute.Sub(now)\n\n    // \u7b49\u5f85\u5230\u4e0b\u4e00\u5206\u949f\u7684\u5f00\u59cb\u65f6\u95f4\n    time.Sleep(waitTime)\n\n    // \u4f7f\u7528\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u6765\u63a7\u5236\u65b9\u6cd5\u7684\u6267\u884c\n    for {\n        // \u6267\u884c\u4f60\u7684\u65b9\u6cd5\n        fmt.Println(\"\u6267\u884c\u65b9\u6cd5\")\n\n        // \u7b49\u5f85\u5b9a\u65f6\u5668\u7684\u4e0b\u4e00\u6b21\u89e6\u53d1\u4e8b\u4ef6\n        &lt;-ticker.C\n\n        // \u8ba1\u7b97\u4e0b\u4e00\u5206\u949f\u7684\u5f00\u59cb\u65f6\u95f4\n        nextMinute = nextMinute.Add(time.Minute)\n\n        // \u8ba1\u7b97\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\n        waitTime = nextMinute.Sub(time.Now())\n\n        // \u7b49\u5f85\u5230\u4e0b\u4e00\u5206\u949f\u7684\u5f00\u59cb\u65f6\u95f4\n        time.Sleep(waitTime)\n    }\n}\n</code></pre>","tags":["prometheus","monitor","golang"]},{"location":"blog/2023/08/08/golang%E5%AE%9A%E6%97%B6%E5%99%A8/#3-timetimer","title":"3\u3001\u65b9\u5f0f\u4e8c time.Timer","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\n    now := time.Now()\n\n    // \u8ba1\u7b97\u4e0b\u4e00\u5206\u949f\u7684\u5f00\u59cb\u65f6\u95f4\n    nextMinute := now.Truncate(time.Minute).Add(time.Minute)\n\n    // \u8ba1\u7b97\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\n    waitTime := nextMinute.Sub(now)\n\n    // \u521b\u5efa\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5728\u7b49\u5f85\u65f6\u95f4\u7ed3\u675f\u540e\u6267\u884c\u4efb\u52a1\n    timer := time.NewTimer(waitTime)\n\n    // \u4f7f\u7528\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u6765\u63a7\u5236\u534f\u7a0b\u7684\u6267\u884c\n    for {\n        &lt;-timer.C // \u7b49\u5f85\u5b9a\u65f6\u5668\u7684\u89e6\u53d1\u4e8b\u4ef6\n\n        // \u6267\u884c\u4f60\u7684\u534f\u7a0b\u4efb\u52a1\n        go func() {\n            fmt.Println(\"\u6267\u884c\u534f\u7a0b\u4efb\u52a1\")\n            // \u5728\u8fd9\u91cc\u7f16\u5199\u4f60\u7684\u534f\u7a0b\u4efb\u52a1\u903b\u8f91\n        }()\n\n        // \u8ba1\u7b97\u4e0b\u4e00\u5206\u949f\u7684\u5f00\u59cb\u65f6\u95f4\n        nextMinute = nextMinute.Add(time.Minute)\n\n        // \u91cd\u65b0\u8ba1\u7b97\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\n        waitTime = nextMinute.Sub(time.Now())\n\n        // \u91cd\u7f6e\u5b9a\u65f6\u5668\n        timer.Reset(waitTime)\n    }\n}\n</code></pre>","tags":["prometheus","monitor","golang"]},{"location":"blog/2023/08/08/golang%E5%AE%9A%E6%97%B6%E5%99%A8/#4gpt","title":"4\u3001\u8fd9\u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\uff0cgpt\u7ed9\u7684\u7b54\u6848\uff0c\u8bf7\u5404\u4f4d\u81ea\u884c\u659f\u914c","text":"<ul> <li>time.NewTimer\uff1a</li> </ul> <p>time.NewTimer \u521b\u5efa\u4e00\u4e2a\u5355\u6b21\u89e6\u53d1\u7684\u5b9a\u65f6\u5668\uff0c\u5b83\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u8fc7\u540e\u89e6\u53d1\u4e00\u6b21\u3002 \u9002\u7528\u4e8e\u9700\u8981\u5728\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u540e\u6267\u884c\u4e00\u6b21\u64cd\u4f5c\u7684\u573a\u666f\u3002 \u53ef\u4ee5\u4f7f\u7528 timer.Reset \u65b9\u6cd5\u91cd\u65b0\u8bbe\u7f6e\u5b9a\u65f6\u5668\u7684\u89e6\u53d1\u65f6\u95f4\u3002</p> <ul> <li>time.NewTicker\uff1a</li> </ul> <p>time.NewTicker \u521b\u5efa\u4e00\u4e2a\u91cd\u590d\u89e6\u53d1\u7684\u5b9a\u65f6\u5668\uff0c\u5b83\u4f1a\u4ee5\u56fa\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u91cd\u590d\u89e6\u53d1\u3002 \u9002\u7528\u4e8e\u9700\u8981\u5b9a\u671f\u6267\u884c\u67d0\u4e2a\u64cd\u4f5c\u7684\u573a\u666f\uff0c\u6bd4\u5982\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u6267\u884c\u4e00\u6b21\u4efb\u52a1\u3002 \u6bcf\u6b21\u89e6\u53d1\u65f6\uff0ctime.Ticker \u7c7b\u578b\u7684\u503c\u4f1a\u53d1\u9001\u4e00\u4e2a\u65f6\u95f4\u5230\u5176\u5185\u90e8\u7684\u901a\u9053 C\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 &lt;-ticker.C \u6765\u7b49\u5f85\u89e6\u53d1\u4e8b\u4ef6\u3002 \u53ef\u4ee5\u4f7f\u7528 ticker.Stop \u65b9\u6cd5\u505c\u6b62\u5b9a\u65f6\u5668\u7684\u89e6\u53d1\u3002</p>","tags":["prometheus","monitor","golang"]},{"location":"blog/2023/08/08/golang%E5%AE%9A%E6%97%B6%E5%99%A8/#5","title":"5\u3001\u4e00\u4e9b\u601d\u8003","text":"<p><pre><code>m := time.Now().Truncate(time.Minute)\nfmt.Printf(\"m:%s\\n\",m )\n\ns := time.Now().Truncate(time.Duration(3600) * time.Second)\nfmt.Printf(\"s:%s\\n\",s )\n</code></pre> \u6267\u884c\u8fd4\u56de\u7ed3\u679c\uff0c\u81ea\u884c\u611f\u53d7\uff0ctime.Now().Truncate()\uff1a</p> <p>m:2023-08-08 11:56:00 +0800 CST</p> <p>s:2023-08-08 11:00:00 +0800 CST</p> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["prometheus","monitor","golang"]},{"location":"blog/2023/03/21/pushGateWay%20%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/","title":"pushGateWay \u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898","text":"<p>pushGateWay \u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898</p>","tags":["python","pushGateWay"]},{"location":"blog/2023/03/21/pushGateWay%20%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/#_1","title":"\u524d\u8a00","text":"<p>\u751f\u4ea7\u9047\u5230\u7684\u4e24\u4e2a\u95ee\u9898</p> <ul> <li> <p> \u53d1\u73b0\u901a\u8fc7pgw\u63a8\u9001\u7684metric\u5728\u4e0d\u7ee7\u7eed\u63a8\u9001\u76d1\u63a7\u6570\u636e\u65f6\uff0cprometheus\u4ecd\u7136\u5728\u66f4\u65b0\u6570\u636e\u3002</p> </li> <li> <p> \u901a\u8fc7pgw\u63a8\u9001metric\u90fd\u88ab\u8986\u76d6\u4e86\u3002</p> </li> </ul>","tags":["python","pushGateWay"]},{"location":"blog/2023/03/21/pushGateWay%20%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/#1","title":"1\u3001\u95ee\u9898\u4e00\u7684\u89e3\u51b3\u65b9\u5f0f","text":"","tags":["python","pushGateWay"]},{"location":"blog/2023/03/21/pushGateWay%20%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/#11","title":"1.1\u3001\u67e5\u770b\u6587\u6863","text":"<p>\u5b98\u65b9\u6587\u6863</p> <ul> <li>When monitoring multiple instances through a single Pushgateway, the Pushgateway becomes both a single point of failure and a potential bottleneck.</li> <li>You lose Prometheus's automatic instance health monitoring via the up metric (generated on every scrape).</li> <li>The Pushgateway never forgets series pushed to it and will expose them to Prometheus forever unless those series are manually deleted via the Pushgateway's API.</li> </ul>","tags":["python","pushGateWay"]},{"location":"blog/2023/03/21/pushGateWay%20%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/#12","title":"1.2\u3001\u89e3\u51b3\u65b9\u5f0f","text":"<p>\u53ea\u80fd\u901a\u8fc7pushgateway\u7684api\u6765\u5220\u9664metric\uff0c\u901a\u8fc7prometheus\u7684api\u5220\u4e0d\u6389 \u5168\u5220\u548c\u5c40\u90e8\u5220\uff0c\u8def\u5f84\u89c4\u5219\u53c2\u8003 <pre><code>curl -X PUT http://127.0.0.1:9099/api/v1/admin/wipe    \n\ncurl -X DELETE http://127.0.0.1:9099/metrics/job/auto_wx_friend_from_pgw/process_name/5ENDU19620000906/grouping_src_instance/192.168.61.153\n</code></pre></p>","tags":["python","pushGateWay"]},{"location":"blog/2023/03/21/pushGateWay%20%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/#2","title":"2\u3001\u95ee\u9898\u4e8c\u7684\u89e3\u51b3\u65b9\u5f0f","text":"<p>\u53c2\u8003</p>","tags":["python","pushGateWay"]},{"location":"blog/2023/03/21/pushGateWay%20%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/#21","title":"2.1\u3001\u63a8\u9001\u4ee3\u7801","text":"<pre><code>from prometheus_client import CollectorRegistry, Gauge, push_to_gateway\nimport socket\n\n\nclass PushGateWayPrometheus:\n    \"\"\"\n    pushgateway\n    \"\"\"\n\n    def __init__(self):\n        self.registry = CollectorRegistry()\n        self.gateway = '192.168.60.203:9099'\n        # label \u548c value \u5bf9\u5e94\n        self.label_name = ['src_instance', 'process_name']\n        self.src_ip_label_value = socket.gethostbyname(socket.gethostname())\n        # \u65e0\u9700\u4fee\u6539\n        self.job = 'auto_wx_friend_from_pgw'\n        self.request_timeout = 5\n\n    def gauge_process_alive(self, metric_name: str, describe: str, process_name: str) -&gt; None:\n        \"\"\"\n        \u5982\u679c\u5bf9\u5e94\u503c\u8bbe\u7f6e\u4e3a1\uff0c\u5219\u8868\u793a\u5e94\u7528\u4ecd\u7136\u5b58\u6d3b\n        :param metric_name:\n        :param describe:\n        :return:\n        \"\"\"\n        g = Gauge(metric_name, describe, registry=self.registry,\n                  labelnames=self.label_name)\n        g.labels(self.src_ip_label_value, process_name).set(1)\n\n    def push(self, metric_name: str, describe: str, process_name: str) -&gt; None:\n        \"\"\"\n        \u63a8\u9001\u5bf9\u5e94\u7684\u6307\u6807\uff0c\u5982\u679c\u6709\u65b0\u7684\u53ea\u9700\u65b0\u589e\n        :param metric_name:\n        :param describe:\n        :return:\n        \"\"\"\n        self.gauge_process_alive(metric_name, describe, process_name)\n        push_to_gateway(self.gateway, job=self.job, registry=self.registry, timeout=self.request_timeout,\n                        grouping_key={\"process_name\": process_name, \"grouping_src_instance\": self.src_ip_label_value})\n\n\n# \u4e0d\u7528\u52a8\nPushGateWayPrometheus().push('job_last_success_unixtime', 'Last time a batch job successfully finished',\n                             'ce0717179055de32027e')\nPushGateWayPrometheus().push('job_last_success_unixtime', 'Last time a batch job successfully finished',\n                             '5ENDU19620000906')\nPushGateWayPrometheus().push('job_last_success_unixtime', 'Last time a batch job successfully finished',\n                             'ce071717fdf178a20c7e')\n</code></pre>","tags":["python","pushGateWay"]},{"location":"blog/2023/03/21/pushGateWay%20%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/#22grouping_keygrouping_keyjob","title":"2.2\u3001\u6307\u5b9agrouping_key\uff0c\u6839\u636egrouping_key\u4e2d\u7684\u503c\u8fdb\u884c\u5206\u7ec4\uff0c\u9ed8\u8ba4\u5c31\u662f\u6839\u636ejob\u8fdb\u884c\u5206\u7ec4","text":"<pre><code>grouping_key={\"process_name\": process_name, \"grouping_src_instance\": self.src_ip_label_value}\n</code></pre>","tags":["python","pushGateWay"]},{"location":"blog/2023/03/21/pushGateWay%20%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/#23","title":"2.3\u3001\u6b64\u65f6\u53ef\u4ee5\u770b\u770b\u4e0a\u4f20\u76d1\u63a7\u9879\u540e\u4ea7\u751f\u4e86\u591a\u5c11\u6570\u636e","text":"<p><pre><code>[root@www pushgateway-1.5.1.linux-amd64]# curl -s \"http://192.168.60.203:9099/metrics\"|grep \"auto_wx_friend_from_pgw\"\njob_last_success_unixtime{grouping_src_instance=\"192.168.61.153\",instance=\"\",job=\"auto_wx_friend_from_pgw\",process_name=\"5ENDU19620000906\",src_instance=\"192.168.61.153\"} 1\njob_last_success_unixtime{grouping_src_instance=\"192.168.61.153\",instance=\"\",job=\"auto_wx_friend_from_pgw\",process_name=\"ce0717179055de32027e\",src_instance=\"192.168.61.153\"} 1\njob_last_success_unixtime{grouping_src_instance=\"192.168.61.153\",instance=\"\",job=\"auto_wx_friend_from_pgw\",process_name=\"ce071717fdf178a20c7e\",src_instance=\"192.168.61.153\"} 1\npush_failure_time_seconds{grouping_src_instance=\"192.168.61.153\",instance=\"\",job=\"auto_wx_friend_from_pgw\",process_name=\"5ENDU19620000906\"} 0\npush_failure_time_seconds{grouping_src_instance=\"192.168.61.153\",instance=\"\",job=\"auto_wx_friend_from_pgw\",process_name=\"ce0717179055de32027e\"} 0\npush_failure_time_seconds{grouping_src_instance=\"192.168.61.153\",instance=\"\",job=\"auto_wx_friend_from_pgw\",process_name=\"ce071717fdf178a20c7e\"} 0\npush_time_seconds{grouping_src_instance=\"192.168.61.153\",instance=\"\",job=\"auto_wx_friend_from_pgw\",process_name=\"5ENDU19620000906\"} 1.6793950591862314e+09\npush_time_seconds{grouping_src_instance=\"192.168.61.153\",instance=\"\",job=\"auto_wx_friend_from_pgw\",process_name=\"ce0717179055de32027e\"} 1.6793950501798096e+09\npush_time_seconds{grouping_src_instance=\"192.168.61.153\",instance=\"\",job=\"auto_wx_friend_from_pgw\",process_name=\"ce071717fdf178a20c7e\"} 1.6793950681916375e+09\n</code></pre> \u6211\u53ea\u8981\u5224\u65ad\u5e94\u7528\u662f\u5426\u5b58\u6d3b\u5c31\u591f\u4e86\uff0c\u6240\u4ee5\u53ea\u8981push_time_seconds{}\u7684\u4e0a\u4f20\u65f6\u95f4\u8db3\u591f\u5c0f\u5c31\u884c\u3002</p> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["python","pushGateWay"]},{"location":"blog/2023/09/11/python%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","title":"python\u5355\u4f8b\u6a21\u5f0f","text":"<p>python\u5355\u4f8b\u6a21\u5f0f\u8bb0\u5f55</p>","tags":["python","\u5355\u4f8b\u6a21\u5f0f"]},{"location":"blog/2023/09/11/python%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#1","title":"1\u3001\u5355\u4f8b\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f","text":"<p>\u8d44\u6e90\u5171\u4eab\uff1a\u5f53\u591a\u4e2a\u5bf9\u8c61\u9700\u8981\u5171\u4eab\u540c\u4e00\u4e2a\u8d44\u6e90\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u6765\u7ba1\u7406\u8be5\u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u4f8b\u5982\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u3001\u65e5\u5fd7\u8bb0\u5f55\u5668\u7b49\u3002</p> <p>\u914d\u7f6e\u4fe1\u606f\uff1a\u5f53\u9700\u8981\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5171\u4eab\u914d\u7f6e\u4fe1\u606f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u6765\u4fdd\u5b58\u548c\u8bbf\u95ee\u914d\u7f6e\u5bf9\u8c61\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u914d\u7f6e\u4fe1\u606f\u7684\u4e00\u81f4\u6027\u548c\u5168\u5c40\u53ef\u8bbf\u95ee\u6027\u3002</p> <p>\u7f13\u5b58\u7ba1\u7406\uff1a\u5728\u9700\u8981\u7f13\u5b58\u6570\u636e\u7684\u573a\u666f\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u6765\u7ba1\u7406\u7f13\u5b58\u5bf9\u8c61\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u521b\u5efa\u7f13\u5b58\u5bf9\u8c61\uff0c\u63d0\u9ad8\u6027\u80fd\u548c\u8d44\u6e90\u5229\u7528\u7387\u3002</p> <p>\u5bf9\u8bdd\u6846\u6216\u7a97\u53e3\u7ba1\u7406\uff1a\u5728\u56fe\u5f62\u7528\u6237\u754c\u9762\uff08GUI\uff09\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u6765\u7ba1\u7406\u5bf9\u8bdd\u6846\u6216\u7a97\u53e3\u5bf9\u8c61\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u5b58\u5728\uff0c\u5e76\u4e14\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u8bbf\u95ee\u548c\u63a7\u5236\u3002</p> <p>\u65e5\u5fd7\u8bb0\u5f55\uff1a\u5728\u9700\u8981\u8bb0\u5f55\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\u7684\u573a\u666f\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u6765\u7ba1\u7406\u65e5\u5fd7\u8bb0\u5f55\u5668\u5bf9\u8c61\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u65e5\u5fd7\u8bb0\u5f55\u5668\u5b9e\u4f8b\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u65b9\u4fbf\u5730\u4f7f\u7528\u3002</p>","tags":["python","\u5355\u4f8b\u6a21\u5f0f"]},{"location":"blog/2023/09/11/python%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#2","title":"2\u3001\u5f53\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u88ab\u6267\u884c\u65f6\uff0c\u5c06\u53d1\u751f\u4ee5\u4e0b\u6b65\u9aa4:","text":"<p>\u89e3\u6790 MRO \u6761\u76ee \u786e\u5b9a\u9002\u5f53\u7684\u5143\u7c7b \u51c6\u5907\u7c7b\u547d\u540d\u7a7a\u95f4 \u6267\u884c\u7c7b\u4e3b\u4f53 \u521b\u5efa\u7c7b\u5bf9\u8c61 \u53c2\u8003\uff1ahttps://docs.python.org/zh-cn/3.7/reference/datamodel.html#customizing-class-creation</p>","tags":["python","\u5355\u4f8b\u6a21\u5f0f"]},{"location":"blog/2023/09/11/python%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#3new","title":"3\u3001new()","text":"<p>\u8c03\u7528\u4ee5\u521b\u5efa\u4e00\u4e2a cls \u7c7b\u7684\u65b0\u5b9e\u4f8b\u3002</p> <p>new() \u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5 (\u56e0\u4e3a\u662f\u7279\u4f8b\u6240\u4ee5\u4f60\u4e0d\u9700\u8981\u663e\u5f0f\u5730\u58f0\u660e)\uff0c\u5b83\u4f1a\u5c06\u6240\u8bf7\u6c42\u5b9e\u4f8b\u6240\u5c5e\u7684\u7c7b\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\u5176\u4f59\u7684\u53c2\u6570\u4f1a\u88ab\u4f20\u9012\u7ed9\u5bf9\u8c61\u6784\u9020\u5668\u8868\u8fbe\u5f0f (\u5bf9\u7c7b\u7684\u8c03\u7528)\u3002new() \u7684\u8fd4\u56de\u503c\u5e94\u4e3a\u65b0\u5bf9\u8c61\u5b9e\u4f8b (\u901a\u5e38\u662f cls \u7684\u5b9e\u4f8b)\u3002</p> <p>\u5982\u679c new() \u8fd4\u56de\u4e00\u4e2a cls \u7684\u5b9e\u4f8b\uff0c\u5219\u65b0\u5b9e\u4f8b\u7684 init() \u65b9\u6cd5\u4f1a\u5728\u4e4b\u540e\u88ab\u6267\u884c\uff0c\u4f8b\u5982 init(self[, ...])\uff0c\u5176\u4e2d self \u4e3a\u65b0\u5b9e\u4f8b\uff0c\u5176\u4f59\u7684\u53c2\u6570\u4e0e\u88ab\u4f20\u9012\u7ed9 new() \u7684\u76f8\u540c\u3002</p> <p>\u5982\u679c new() \u672a\u8fd4\u56de\u4e00\u4e2a cls \u7684\u5b9e\u4f8b\uff0c\u5219\u65b0\u5b9e\u4f8b\u7684 init() \u65b9\u6cd5\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c\u3002</p>","tags":["python","\u5355\u4f8b\u6a21\u5f0f"]},{"location":"blog/2023/09/11/python%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#4init","title":"4\u3001init()","text":"<p>\u5728\u5b9e\u4f8b (\u901a\u8fc7 new()) \u88ab\u521b\u5efa\u4e4b\u540e\uff0c\u8fd4\u56de\u8c03\u7528\u8005\u4e4b\u524d\u8c03\u7528\u3002\u5176\u53c2\u6570\u4e0e\u4f20\u9012\u7ed9\u7c7b\u6784\u9020\u5668\u8868\u8fbe\u5f0f\u7684\u53c2\u6570\u76f8\u540c\u3002\u4e00\u4e2a\u57fa\u7c7b\u5982\u679c\u6709 init() \u65b9\u6cd5\uff0c\u5219\u5176\u6240\u6d3e\u751f\u7684\u7c7b\u5982\u679c\u4e5f\u6709 init() \u65b9\u6cd5\uff0c\u5c31\u5fc5\u987b\u663e\u5f0f\u5730\u8c03\u7528\u5b83\u4ee5\u786e\u4fdd\u5b9e\u4f8b\u57fa\u7c7b\u90e8\u5206\u7684\u6b63\u786e\u521d\u59cb\u5316\uff1b\u4f8b\u5982: super().init([args...]).</p> <p>\u56e0\u4e3a\u5bf9\u8c61\u662f\u7531 new() \u548c init() \u534f\u4f5c\u6784\u9020\u5b8c\u6210\u7684 (\u7531 new() \u521b\u5efa\uff0c\u5e76\u7531 init() \u5b9a\u5236)\uff0c\u6240\u4ee5 init() \u8fd4\u56de\u7684\u503c\u53ea\u80fd\u662f None\uff0c\u5426\u5219\u4f1a\u5728\u8fd0\u884c\u65f6\u5f15\u53d1 TypeError\u3002</p>","tags":["python","\u5355\u4f8b\u6a21\u5f0f"]},{"location":"blog/2023/09/11/python%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#5","title":"5\u3001\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f","text":"\u975e\u7ebf\u7a0b\u5b89\u5168 <pre><code>import time\n\n\nclass Singleton:\n    _instance = None\n\n    def __new__(cls, *args, **kwargs):\n        if not cls._instance:\n            time.sleep(1)\n            cls._instance = super().__new__(cls, *args, **kwargs)\n        return cls._instance\n\n#instance1 = Singleton()\n#instance2 = Singleton()\n\n#print(instance1 is instance2)  # \u8f93\u51fa: True\n\nimport threading\ndef create_singleton():\n    instance = Singleton()\n    print(instance)\n\nthreads = []\nfor _ in range(10):\n    t = threading.Thread(target=create_singleton)\n    threads.append(t)\n    t.start()\n\nfor t in threads:\n    t.join()\n\n\n&lt;__main__.Singleton object at 0x7f8269c91f60&gt;\n&lt;__main__.Singleton object at 0x7f8269c91000&gt;\n&lt;__main__.Singleton object at 0x7f8269c90df0&gt;\n&lt;__main__.Singleton object at 0x7f8269c90be0&gt;\n&lt;__main__.Singleton object at 0x7f8269c909d0&gt;\n&lt;__main__.Singleton object at 0x7f8269c907c0&gt;\n&lt;__main__.Singleton object at 0x7f8269c905b0&gt;\n&lt;__main__.Singleton object at 0x7f8269c903a0&gt;\n&lt;__main__.Singleton object at 0x7f8269c90190&gt;\n&lt;__main__.Singleton object at 0x7f8269c91d20&gt;\n</code></pre>","tags":["python","\u5355\u4f8b\u6a21\u5f0f"]},{"location":"blog/2023/09/11/python%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#6","title":"6\u3001\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f","text":"\u7ebf\u7a0b\u5b89\u5168\u7684 <pre><code>import threading\n\nclass Singleton:\n    _instance = None\n    _lock = threading.Lock()\n\n    def __new__(cls, *args, **kwargs):\n        thread_id = threading.current_thread()\n        if not cls._instance:\n            print(\"\u6211\u518d\u7b49\u5f85\u7740\", thread_id)\n\n            with cls._lock:\n                print(\"\u6211\u8fdb\u6765\u4e86\",thread_id)\n                if not cls._instance:\n                    cls._instance = super().__new__(cls, *args, **kwargs)\n        print(\"\u6211\u76f4\u63a5\u8fd4\u56de\u4e86\", thread_id)\n        return cls._instance\n\n\ndef create_singleton():\n    instance = Singleton()\n    print(instance)\n\nthreads = []\nfor _ in range(10):\n    t = threading.Thread(target=create_singleton)\n    threads.append(t)\n    t.start()\n\nfor t in threads:\n    t.join()\n\n\n\n\u6211\u518d\u7b49\u5f85\u7740 &lt;Thread(Thread-1 (create_singleton), started 139852282197760)&gt;\n\u6211\u8fdb\u6765\u4e86 &lt;Thread(Thread-1 (create_singleton), started 139852282197760)&gt;\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-1 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n\n\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-2 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n\n\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-3 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n\n\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-4 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n\n\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-5 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n\n\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-6 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n\n\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-7 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n\n\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-8 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n\n\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-9 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n\n\n\u6211\u76f4\u63a5\u8fd4\u56de\u4e86 &lt;Thread(Thread-10 (create_singleton), started 139852282197760)&gt;\n&lt;__main__.Singleton object at 0x7f31e59b90c0&gt;\n</code></pre>","tags":["python","\u5355\u4f8b\u6a21\u5f0f"]},{"location":"blog/2023/09/11/python%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#7","title":"7\u3001\u53c2\u8003","text":"<p>https://docs.python.org/zh-cn/3.7/library/threading.html#using-locks-conditions-and-semaphores-in-the-with-statement</p> <p>https://docs.python.org/zh-cn/3.7/library/threading.html#lock-objects</p> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["python","\u5355\u4f8b\u6a21\u5f0f"]},{"location":"blog/2023/12/20/simple%20ui%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7%E8%8F%9C%E5%8D%95%E6%9D%83%E9%99%90/","title":"simple ui \u81ea\u5b9a\u4e49\u7528\u6237\u83dc\u5355\u6743\u9650","text":"<p>simple ui \u81ea\u5b9a\u4e49\u7528\u6237\u83dc\u5355\u6743\u9650.</p>","tags":["simple ui","django","\u81ea\u5b9a\u4e49\u6743\u9650"]},{"location":"blog/2023/12/20/simple%20ui%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7%E8%8F%9C%E5%8D%95%E6%9D%83%E9%99%90/#_1","title":"\u524d\u8a00","text":"<p>\u672c\u6765\u4e0d\u60f3\u6539simple ui\u7684\u83dc\u5355\u7684\uff0c\u4f46\u662f\u6709\u4e9b\u6d01\u7656\u771f\u7684\u5fcd\u4e0d\u4e86\uff0c\u5c31\u6bd4\u5982\u5c06\u7684group\u7684\u6982\u5ff5\u6539\u6210\u4e86\u81ea\u5df1\u60f3\u8c61\u4e2d\u7684role\u4e4b\u540e\uff0c\u5728\u9ed8\u8ba4\u7684simple UI\u4e2d\u81ea\u5e26\u7684group\u548crole\u4e0d\u5728\u4e00\u4e2a\u83dc\u5355\u4e0b\u9762\uff0c\u4e5f\u5c1d\u8bd5\u81ea\u5b9a\u4e49\u4e86group\uff0c\u540e\u679c\u5c31\u662f\u5f88\u591a\u65b9\u6cd5\u90fd\u9700\u8981\u81ea\u5df1\u53bb\u5b9e\u73b0\uff0c\u7206\u70b8\u3002</p> <p>\u6743\u9650\u5728\u7528\u6237\u548c\u89d2\u8272\u91cc\u9762\u8fdb\u884c\u914d\u7f6e\uff0c\u6ca1\u6709\u6743\u9650\u7684\u83dc\u5355\u548c\u6309\u94ae\u90fd\u4e0d\u4f1a\u5c55\u793a\u3002</p> <p>\u6211\u8fd9\u4e2a\u53ea\u662f\u5f88\u7b80\u5355\u7684\u6539\u6cd5\uff0c\u8981\u60f3\u66f4\u591a\u529f\u80fd\u8fd8\u662f\u8d2d\u4e70\u4ed8\u8d39\u7248\u5427\uff0c\u5144\u5f1f\u4eec\u3002</p>","tags":["simple ui","django","\u81ea\u5b9a\u4e49\u6743\u9650"]},{"location":"blog/2023/12/20/simple%20ui%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7%E8%8F%9C%E5%8D%95%E6%9D%83%E9%99%90/#1","title":"1\u3001\u6a21\u578b","text":"<pre><code>class MyUser(AbstractBaseUser, PermissionsMixin):\n    email = models.EmailField(verbose_name='\u90ae\u4ef6\u5730\u5740', max_length=255, unique=True)\n    phone = models.CharField('\u624b\u673a\u53f7\u7801', max_length=20, help_text='\u624b\u673a\u53f7\u7801')\n    date_of_birth = models.DateTimeField('\u521b\u5efa\u65f6\u95f4', default=timezone.now)\n    name = models.CharField('\u540d\u5b57', max_length=20)\n    is_active = models.BooleanField(default=True)\n    is_admin = models.BooleanField('\u662f\u5426\u53ef\u4ee5\u767b\u5f55\u540e\u53f0', default=False)  # \u8fd9\u4e2a\u914d\u7f6e\u51b3\u5b9a\u7528\u6237\u662f\u5426\u53ef\u4ee5\u767b\u5f55\u540e\u53f0,\u4e0d\u80fd\u6240\u6709\u6743\u9650\u90fd\u7ed9superuser\n\n    objects = MyUserManager()\n\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['name', 'phone']\n\n    def __str__(self):\n        return self.name\n\n    @property\n    def is_staff(self):\n        return self.is_admin\n\n    class Meta:  # \u7ed9\u6a21\u578b\u589e\u52a0\u6743\u9650\n        verbose_name = \"\u7528\u6237\"\n        verbose_name_plural = \"\u7528\u6237\u4eec\"\n        permissions = [\n            (\"list_user\", \"Can change the status of tasks\"),\n            (\"close_user\", \"Can remove a task by setting its status as closed\"),\n        ]\n\n\nclass Menu(models.Model):\n    \"\"\"\n    \u83dc\u5355\n    \"\"\"\n    type_choice = (\n        ('interface', '\u63a5\u53e3'),\n        ('menu', '\u83dc\u5355')\n    )\n    name = models.CharField(max_length=30, unique=True, db_index=True, verbose_name=\"\u83dc\u5355\u540d\")\n    icon = models.CharField(max_length=50, null=True, blank=True, verbose_name=\"\u56fe\u6807\")\n    path = models.CharField(max_length=255, null=True, blank=True, verbose_name=\"\u94fe\u63a5\u5730\u5740\")\n    type = models.CharField(max_length=30, null=True, blank=True, db_index=True, choices=type_choice,\n                            verbose_name='\u7c7b\u578b')\n    is_show = models.BooleanField(default=True, db_index=True, verbose_name=\"\u662f\u5426\u663e\u793a\")\n    sort = models.IntegerField(null=True, blank=True, db_index=True, verbose_name=\"\u6392\u5e8f\u6807\u8bb0\")\n    pid = models.ForeignKey('self', null=True, blank=True, on_delete=models.SET_NULL, verbose_name=\"\u7236\u83dc\u5355\")\n\n    def __str__(self):\n        return self.name\n\n    class Meta:\n        verbose_name = '\u83dc\u5355'\n        verbose_name_plural = verbose_name\n        ordering = ['id']\n</code></pre>","tags":["simple ui","django","\u81ea\u5b9a\u4e49\u6743\u9650"]},{"location":"blog/2023/12/20/simple%20ui%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7%E8%8F%9C%E5%8D%95%E6%9D%83%E9%99%90/#2simple-ui","title":"2\u3001simple ui\u7684\u83dc\u5355\u914d\u7f6e","text":"<pre><code>SIMPLEUI_CONFIG = {\n    'dynamic': False,\n    'menus': [],\n}\n</code></pre>","tags":["simple ui","django","\u81ea\u5b9a\u4e49\u6743\u9650"]},{"location":"blog/2023/12/20/simple%20ui%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7%E8%8F%9C%E5%8D%95%E6%9D%83%E9%99%90/#3","title":"3\u3001\u5728\u4e2d\u95f4\u4ef6\u4e2d\u63a7\u5236\u83dc\u5355","text":"<pre><code>class MenuMiddleware(MiddlewareMixin):\n    \"\"\"\n    \u81ea\u5b9a\u4e49\u5de6\u8fb9\u7684\u83dc\u5355\u680f\n    \"\"\"\n\n    def process_request(self, request):\n        current_user = request.user\n        perms = current_user.get_all_permissions()\n        perms_list = set()  # /admin/app_label/model_name/, \u7528\u8fd9\u79cd\u65b9\u5f0f\u6a21\u578b\u7684\u547d\u540d\u89c4\u5219\u4e00\u5b9a\u8981\u89c4\u8303\uff0c\u5426\u5219\u5339\u914d\u5931\u8d25\n        for permission in perms:\n            app = permission.split('.')[0]\n            module = permission.split('.')[1].split('_')[1]\n            path = f'/admin/{app}/{module}/'\n            perms_list.add(path)\n\n        from user.models import Menu  # \u7528\u6237\u7684\u6743\u9650\u91cc\u9762\u6709\u6ca1\u6709\u8fd9\u4e2a\u83dc\u5355\n        menu_list = []\n        for _m in Menu.objects.filter(type__exact='menu',\n                                      is_show__exact=True).order_by('sort'):\n            inter_queryset = _m.menu_set.all().filter(is_show__exact=True).order_by('sort')\n            men_dict = {\n                'name': _m.name,\n                'icon': _m.icon,\n                'models': []\n            }\n            for inter in inter_queryset:\n                if inter.path in perms_list:\n                    men_dict['models'].append({\n                        'name': inter.name,\n                        'icon': inter.icon,\n                        'url': inter.path\n                    })\n            if len(men_dict['models']) &gt; 0:\n                menu_list.append(men_dict)\n            settings.SIMPLEUI_CONFIG['menus'] = menu_list\n        return None\n</code></pre>","tags":["simple ui","django","\u81ea\u5b9a\u4e49\u6743\u9650"]},{"location":"blog/2023/12/20/simple%20ui%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7%E8%8F%9C%E5%8D%95%E6%9D%83%E9%99%90/#4","title":"4\u3001 \u83dc\u5355\u7684\u7ba1\u7406","text":"\u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["simple ui","django","\u81ea\u5b9a\u4e49\u6743\u9650"]},{"location":"blog/2023/06/11/%E5%B1%9E%E6%80%A7%E3%80%81property%E5%92%8C%E5%B1%9E%E6%80%A7%E6%8F%8F%E8%BF%B0%E7%AC%A6/","title":"\u5c5e\u6027\u3001property\u548c\u5c5e\u6027\u63cf\u8ff0\u7b26","text":"<p>\u5c5e\u6027\u3001property\u548c\u5c5e\u6027\u63cf\u8ff0\u7b26</p>","tags":["python","property"]},{"location":"blog/2023/06/11/%E5%B1%9E%E6%80%A7%E3%80%81property%E5%92%8C%E5%B1%9E%E6%80%A7%E6%8F%8F%E8%BF%B0%E7%AC%A6/#1","title":"1\u3001\u5b9e\u4f8b\u5c5e\u6027\u548c\u7c7b\u5c5e\u6027\u7684\u533a\u522b","text":"<p>\u5728 Python \u4e2d\uff0c\u7c7b\u5c5e\u6027\u662f\u5b9a\u4e49\u5728\u7c7b\u7ea7\u522b\u4e0a\u7684\u53d8\u91cf\u6216\u5e38\u91cf\uff0c\u5b83\u4eec\u662f\u6240\u6709\u8be5\u7c7b\u5b9e\u4f8b\u5171\u4eab\u7684\u503c\u3002\u800c\u5b9e\u4f8b\u5c5e\u6027\u662f\u5b9a\u4e49\u5728\u5b9e\u4f8b\u7ea7\u522b\u4e0a\u7684\u53d8\u91cf\u6216\u5e38\u91cf\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u5176\u81ea\u5df1\u7684\u503c\u3002</p> <p>\u533a\u522b\u4e3b\u8981\u5728\u4e8e\uff1a</p> <ul> <li> <p> \u503c\u7684\u5b58\u50a8\u4f4d\u7f6e\uff1a\u7c7b\u5c5e\u6027\u5b58\u50a8\u5728\u7c7b\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u800c\u5b9e\u4f8b\u5c5e\u6027\u5b58\u50a8\u5728\u5b9e\u4f8b\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u3002</p> </li> <li> <p> \u8bbf\u95ee\u65b9\u5f0f\uff1a\u7c7b\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u6216\u5b9e\u4f8b\u8bbf\u95ee\uff0c\u4f46\u5b9e\u4f8b\u5c5e\u6027\u53ea\u80fd\u901a\u8fc7\u5b9e\u4f8b\u8bbf\u95ee\u3002</p> </li> <li> <p> \u7ee7\u627f\uff1a\u5b50\u7c7b\u4f1a\u7ee7\u627f\u7236\u7c7b\u7684\u7c7b\u5c5e\u6027\uff0c\u4f46\u4e0d\u4f1a\u7ee7\u627f\u7236\u7c7b\u7684\u5b9e\u4f8b\u5c5e\u6027\u3002</p> </li> </ul> <p>\u793a\u4f8b\uff1a</p> <p><pre><code>class MyClass:\n    class_attribute = 'class_value'\n\n    def __init__(self, instance_attribute):\n        self.instance_attribute = instance_attribute\n\nmy_instance_1 = MyClass('instance_value_1')\nmy_instance_2 = MyClass('instance_value_2')\n\nprint(MyClass.class_attribute)  # \u8f93\u51fa\uff1a'class_value'\nprint(my_instance_1.class_attribute)  # \u8f93\u51fa\uff1a'class_value'\nprint(my_instance_1.instance_attribute)  # \u8f93\u51fa\uff1a'instance_value_1'\nprint(my_instance_2.instance_attribute)  # \u8f93\u51fa\uff1a'instance_value_2'\n</code></pre> \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cclass_attribute \u662f\u4e00\u4e2a\u7c7b\u5c5e\u6027\uff0c\u88ab MyClass \u7684\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u3002\u800c instance_attribute \u5219\u662f\u4e00\u4e2a\u5b9e\u4f8b\u5c5e\u6027\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u4e00\u4efd\u81ea\u5df1\u7684\u503c\u3002</p>","tags":["python","property"]},{"location":"blog/2023/06/11/%E5%B1%9E%E6%80%A7%E3%80%81property%E5%92%8C%E5%B1%9E%E6%80%A7%E6%8F%8F%E8%BF%B0%E7%AC%A6/#2property","title":"2\u3001property\u5e94\u7528\u573a\u666f","text":"<ul> <li> <p> \u8ba1\u7b97\u5c5e\u6027\uff1a\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u6839\u636e\u5bf9\u8c61\u7684\u72b6\u6001\u8ba1\u7b97\u51fa\u67d0\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 property \u5c06\u4e00\u4e2a\u65b9\u6cd5\u8f6c\u6362\u6210\u4e00\u4e2a\u53ea\u8bfb\u5c5e\u6027\uff0c\u4ee5\u4fbf\u5728\u8bbf\u95ee\u8fd9\u4e2a\u5c5e\u6027\u65f6\u52a8\u6001\u8ba1\u7b97\u51fa\u5176\u503c\u3002</p> </li> <li> <p> \u6570\u636e\u6821\u9a8c\uff1a\u5f53\u6211\u4eec\u60f3\u8981\u9650\u5236\u5bf9\u8c61\u7684\u67d0\u4e2a\u5c5e\u6027\u7684\u53d6\u503c\u8303\u56f4\u6216\u683c\u5f0f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5c5e\u6027\u7684 setter \u65b9\u6cd5\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u6821\u9a8c\uff0c\u5e76\u786e\u4fdd\u5b83\u4eec\u6ee1\u8db3\u8981\u6c42\u3002</p> </li> <li> <p> \u9632\u6b62\u610f\u5916\u4fee\u6539\uff1a\u6709\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u67d0\u4e9b\u5c5e\u6027\u53ea\u80fd\u88ab\u8bfb\u53d6\uff0c\u800c\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u53ef\u4ee5\u4f7f\u7528 property \u5c06\u5176\u8bbe\u7f6e\u4e3a\u53ea\u8bfb\u5c5e\u6027\u3002</p> </li> <li> <p> \u5c01\u88c5\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\uff1a\u5c5e\u6027\u8fd8\u53ef\u4ee5\u7528\u6765\u9690\u85cf\u5bf9\u8c61\u5185\u90e8\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u4ece\u800c\u63d0\u9ad8\u4ee3\u7801\u7684\u5b89\u5168\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p> </li> </ul>","tags":["python","property"]},{"location":"blog/2023/06/11/%E5%B1%9E%E6%80%A7%E3%80%81property%E5%92%8C%E5%B1%9E%E6%80%A7%E6%8F%8F%E8%BF%B0%E7%AC%A6/#3proprety","title":"3\u3001\u5c5e\u6027\u63cf\u8ff0\u7b26\u548cproprety\u7684\u533a\u522b","text":"<p>\u5c5e\u6027\u63cf\u8ff0\u7b26\u548cproperty\u90fd\u662fPython\u4e2d\u7528\u4e8e\u5b9a\u4e49\u7c7b\u5c5e\u6027\u7684\u673a\u5236\uff0c\u4f46\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\u3002</p> <p>\u5c5e\u6027\u63cf\u8ff0\u7b26\u662f\u4e00\u4e2a\u7c7b\uff0c\u8be5\u7c7b\u5b9a\u4e49\u4e86\u4e09\u4e2a\u65b9\u6cd5\uff1aget()\u3001set()\u548c__delete__()\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5141\u8bb8\u60a8\u63a7\u5236\u5c5e\u6027\u7684\u8bbf\u95ee\u3001\u4fee\u6539\u548c\u5220\u9664\u3002\u5c5e\u6027\u63cf\u8ff0\u7b26\u53ef\u4ee5\u4e0e\u4efb\u4f55\u7c7b\u5c5e\u6027\u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u4e14\u4e00\u4e2a\u5c5e\u6027\u63cf\u8ff0\u7b26\u53ef\u4ee5\u88ab\u591a\u4e2a\u7c7b\u5c5e\u6027\u5171\u4eab\u3002\u5f53\u4e00\u4e2a\u5c5e\u6027\u63cf\u8ff0\u7b26\u88ab\u8d4b\u503c\u7ed9\u4e00\u4e2a\u7c7b\u5c5e\u6027\u65f6\uff0c\u5b83\u4f1a\u66ff\u6362\u8be5\u5c5e\u6027\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u63cf\u8ff0\u7b26\u7528\u4e8e\u9650\u5236\u5c5e\u6027\u7684\u53d6\u503c\u8303\u56f4\uff1a</p> <p><pre><code>class Range:\n    def __init__(self, min_value, max_value):\n        self.min_value = min_value\n        self.max_value = max_value\n\n    def __get__(self, instance, owner):\n        return instance.__dict__[self.name]\n\n    def __set__(self, instance, value):\n        if value &lt; self.min_value or value &gt; self.max_value:\n            raise ValueError(\"Value out of range\")\n        instance.__dict__[self.name] = value\n\n    def __set_name__(self, owner, name):\n        self.name = name\n\nclass MyClass:\n    x = Range(0, 10)\n\nmy_obj = MyClass()\nmy_obj.x = 5\nprint(my_obj.x)\nmy_obj.x = 15 # Raises ValueError: Value out of range\n</code></pre> \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c5e\u6027\u63cf\u8ff0\u7b26Range\u63a7\u5236\u4e86\u5c5e\u6027x\u7684\u53d6\u503c\u8303\u56f4\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0cproperty\u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5316\u5c5e\u6027\u8bbf\u95ee\u7684\u65b9\u5f0f\u3002\u4e0e\u5c5e\u6027\u63cf\u8ff0\u7b26\u4e0d\u540c\uff0cproperty\u4e0d\u662f\u4e00\u4e2a\u7c7b\uff0c\u800c\u662f\u4e00\u4e2a\u5305\u88c5\u5668\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e09\u4e2a\u53ef\u9009\u53c2\u6570\uff1afget\u3001fset\u548cfdel\u3002\u8fd9\u4e9b\u53c2\u6570\u5206\u522b\u6307\u5b9a\u83b7\u53d6\u3001\u8bbe\u7f6e\u548c\u5220\u9664\u5c5e\u6027\u65f6\u6240\u8c03\u7528\u7684\u65b9\u6cd5\u3002\u5982\u679c\u53ea\u9700\u8981\u5b9a\u4e49\u8bfb\u53d6\u5c5e\u6027\u7684\u65b9\u6cd5\uff0c\u5219\u53ef\u4ee5\u7701\u7565fset\u548cfdel\u3002\u4f8b\u5982\uff1a</p> <p><pre><code>class MyClass:\n    def __init__(self, x):\n        self._x = x\n\n    @property\n    def x(self):\n        print(\"Getting x\")\n        return self._x\n\n    @x.setter\n    def x(self, value):\n        print(\"Setting x\")\n        self._x = value\n\nmy_obj = MyClass(5)\nprint(my_obj.x) # Calls getter method\nmy_obj.x = 10 # Calls setter method\n</code></pre> \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cproperty\u5305\u88c5\u5668\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3ax\u7684\u5c5e\u6027\uff0c\u4f7f\u7528@property\u4fee\u9970\u5668\u6807\u8bb0getter\u65b9\u6cd5\uff0c\u4f7f\u7528@x.setter\u4fee\u9970\u5668\u6807\u8bb0setter\u65b9\u6cd5\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u50cf\u8bbf\u95ee\u666e\u901a\u5c5e\u6027\u4e00\u6837\u6765\u8bbf\u95ee\u548c\u4fee\u6539x\u5c5e\u6027\u3002\u5f53\u8bbf\u95eex\u5c5e\u6027\u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528getter\u65b9\u6cd5\uff1b\u5f53\u4fee\u6539x\u5c5e\u6027\u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528setter\u65b9\u6cd5\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5c5e\u6027\u63cf\u8ff0\u7b26\u63d0\u4f9b\u4e86\u66f4\u7075\u6d3b\u7684\u5c5e\u6027\u63a7\u5236\u673a\u5236\uff0c\u800cproperty\u5219\u63d0\u4f9b\u4e86\u66f4\u7b80\u5355\u3001\u66f4\u6613\u4e8e\u4f7f\u7528\u7684\u8bed\u6cd5\u7cd6\u3002</p>","tags":["python","property"]},{"location":"blog/2023/06/11/%E5%B1%9E%E6%80%A7%E3%80%81property%E5%92%8C%E5%B1%9E%E6%80%A7%E6%8F%8F%E8%BF%B0%E7%AC%A6/#4","title":"4\u3001\u5c5e\u6027\u63cf\u8ff0\u7b26\u7684\u89e6\u53d1","text":"<p>\u63cf\u8ff0\u7b26\u662f\u4e00\u79cd\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5c5e\u6027\u8bbf\u95ee\u7684\u65b9\u5f0f\uff0c\u5b83\u80fd\u591f\u901a\u8fc7\u5c5e\u6027\u8bbf\u95ee\u6765\u62e6\u622a\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u5c5e\u6027\u7684\u8bfb\u53d6\u64cd\u4f5c\u3001\u8d4b\u503c\u64cd\u4f5c\u6216\u5220\u9664\u64cd\u4f5c\uff0c\u4ece\u800c\u5b9e\u73b0\u81ea\u5b9a\u4e49\u903b\u8f91\u3002\u8981\u60f3\u8bc6\u522b\u5230\u5c5e\u6027\u8c03\u7528\uff0c\u9700\u8981\u5728\u63cf\u8ff0\u7b26\u7c7b\u4e2d\u5b9e\u73b0__get__\u3001__set__\u548c__delete__\u8fd9\u4e09\u4e2a\u65b9\u6cd5\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\u3002</p> <p>\u5176\u4e2d\uff0cget(self, instance, owner)\u65b9\u6cd5\u4f1a\u5728\u83b7\u53d6\u5c5e\u6027\u503c\u65f6\u88ab\u8c03\u7528\uff0c\u5b83\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1ainstance\u8868\u793a\u5b9e\u4f8b\u5bf9\u8c61\uff0cowner\u8868\u793a\u5b9a\u4e49\u8be5\u5c5e\u6027\u7684\u7c7b\uff0c\u5982\u679c\u8be5\u5c5e\u6027\u662f\u901a\u8fc7\u7c7b\u76f4\u63a5\u8bbf\u95ee\uff0c\u90a3\u4e48instance\u4e3aNone\uff1b\u5982\u679c\u8be5\u5c5e\u6027\u662f\u901a\u8fc7\u5b9e\u4f8b\u8bbf\u95ee\uff0c\u90a3\u4e48instance\u4e3a\u5b9e\u4f8b\u672c\u8eab\u3002set(self, instance, value)\u65b9\u6cd5\u4f1a\u5728\u7ed9\u5c5e\u6027\u8d4b\u503c\u65f6\u88ab\u8c03\u7528\uff0c\u5b83\u63a5\u6536\u4e09\u4e2a\u53c2\u6570\uff1ainstance\u8868\u793a\u5b9e\u4f8b\u5bf9\u8c61\uff0cvalue\u8868\u793a\u8981\u8d4b\u7684\u503c\u3002delete(self, instance)\u65b9\u6cd5\u4f1a\u5728\u5220\u9664\u5c5e\u6027\u65f6\u88ab\u8c03\u7528\uff0c\u5b83\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1ainstance\u8868\u793a\u5b9e\u4f8b\u5bf9\u8c61\u3002 \u5f53\u4f7f\u7528\u63cf\u8ff0\u7b26\u65f6\uff0c \u53ea\u8981\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u7c7b\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u5c31\u80fd\u591f\u5728\u8be5\u5c5e\u6027\u88ab\u8bbf\u95ee\u3001\u8d4b\u503c\u6216\u5220\u9664\u65f6\u81ea\u52a8\u89e6\u53d1\u76f8\u5e94\u7684\u65b9\u6cd5\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u63cf\u8ff0\u7b26\u7c7b\uff0c\u5b83\u80fd\u591f\u8bb0\u5f55\u5c5e\u6027\u8bbf\u95ee\u7684\u6b21\u6570\uff1a</p> <p><pre><code>class CountAccess:\n    def __init__(self, name):\n        self.name = name\n        self.count = 0\n\n    def __get__(self, instance, owner):\n        self.count += 1\n        return getattr(instance, self.name)\n\n    def __set__(self, instance, value):\n        self.count += 1\n        setattr(instance, self.name, value)\n\n    def __delete__(self, instance):\n        self.count += 1\n        delattr(instance, self.name)\n\nclass MyClass:\n    x = CountAccess('x')\n</code></pre> \u5f53\u901a\u8fc7\u5b9e\u4f8b\u8bbf\u95eex\u5c5e\u6027\u65f6\uff0c\u5c31\u4f1a\u81ea\u52a8\u89e6\u53d1CountAccess\u4e2d\u76f8\u5e94\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a</p> <pre><code>obj = MyClass()\nobj.x = 10  # \u89e6\u53d1 CountAccess.__set__ \u65b9\u6cd5\uff0c\u8bb0\u5f55\u8bbf\u95ee\u6b21\u6570\u5e76\u8bbe\u7f6e obj \u7684 x \u5c5e\u6027\u503c\u4e3a 10\nprint(obj.x)  # \u89e6\u53d1 CountAccess.__get__ \u65b9\u6cd5\uff0c\u8bb0\u5f55\u8bbf\u95ee\u6b21\u6570\u5e76\u83b7\u53d6 obj \u7684 x \u5c5e\u6027\u503c\ndel obj.x  # \u89e6\u53d1 CountAccess.__delete__ \u65b9\u6cd5\uff0c\u8bb0\u5f55\u8bbf\u95ee\u6b21\u6570\u5e76\u5220\u9664 obj \u7684 x \u5c5e\u6027\n</code></pre> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["python","property"]},{"location":"blog/2024/06/03/%E5%BD%93%E6%88%91%E9%81%87%E5%88%B0%E4%BA%86%E7%88%AC%E8%99%AB/","title":"\u5f53\u6211\u9047\u5230\u4e86\u722c\u866b","text":"<p>\u8fd0\u7ef4\u540c\u5b66\uff0c\u7ebf\u4e0a\u673a\u5668\u600e\u4e48\u53c8\u53cc\u53d2\u53d5\u6302\u4e86\uff1f</p> <p>\u5bf9\u722c\u866b\u4e5f\u662f\u76f8\u7231\u76f8\u6740\u591a\u5e74\uff0c\u6211\u5bf9\u7ebf\u4e0a\u722c\u866b\u7684\u5e94\u5bf9\u51fa\u73b0\u7684\u51e0\u4e2a\u9636\u6bb5\uff1a</p>","tags":["\u722c\u866b","lua","openresty"]},{"location":"blog/2024/06/03/%E5%BD%93%E6%88%91%E9%81%87%E5%88%B0%E4%BA%86%E7%88%AC%E8%99%AB/#_1","title":"\u601d\u8def\uff1a","text":"","tags":["\u722c\u866b","lua","openresty"]},{"location":"blog/2024/06/03/%E5%BD%93%E6%88%91%E9%81%87%E5%88%B0%E4%BA%86%E7%88%AC%E8%99%AB/#1","title":"1\u3001\u770b\u65e5\u5fd7","text":"<p>\u5206\u6790\u65e5\u5fd7\uff0c\u627e\u51fa\u5f02\u5e38\u8bf7\u6c42\uff0c\u5c01ip\u3002</p>","tags":["\u722c\u866b","lua","openresty"]},{"location":"blog/2024/06/03/%E5%BD%93%E6%88%91%E9%81%87%E5%88%B0%E4%BA%86%E7%88%AC%E8%99%AB/#2waf","title":"2\u3001\u770bwaf","text":"<p>\u901a\u8fc7waf\uff0c\u9488\u5bf9\u67d0\u4e2auri \uff0c\u8fdb\u884c\u9650\u6d41\uff08\u5e76\u4e14\u4eba\u673a\u8bc6\u522b\uff09\uff0c\u63a7\u5236\u7684\u8fd8\u662f\u6e90ip\uff0c\u8d77\u521d\u6709\u70b9\u6210\u6548\u3002</p>","tags":["\u722c\u866b","lua","openresty"]},{"location":"blog/2024/06/03/%E5%BD%93%E6%88%91%E9%81%87%E5%88%B0%E4%BA%86%E7%88%AC%E8%99%AB/#3nginx","title":"3\u3001nginx\u9650\u5236","text":"<p>\u9047\u5230\u5927\u91cf\u5355ip\uff0c\u89e6\u53d1\u4e0d\u5230\u4eba\u673a\u8bc6\u522b\uff0c\u901a\u8fc7nginx\u81ea\u5e26\u7684limit_req_zone\u8fdb\u884curi\u9650\u5236\uff0c\u53d1\u73b0\u6709\u6548\u679c\uff0c\u4f46\u662f\u4f1a\u8bef\u6740\u5f88\u591a\u65e0\u8f9c\u3002</p> <pre><code>map $request_uri $xx_limit {\n    \"~*/xxx/\" \"/xxx/\";\n    default \"\";\n}\nlimit_req_zone $xx_limit zone=api_limit:10m rate=5r/s;\n\n\u5f53\u8bf7\u6c42\u8def\u5f84\u5305\u542b/xxx/\u65f6\uff0c\u8bbe\u7f6e$xx_limit \u4e3a/xxx/\uff0c\u9ed8\u8ba4\u503c\u4e3a\u7a7a\uff0c\u4e3a\u7a7a\u5219limit_req_zone \u4e0d\u751f\u6548\n\n\n\n\nlimit_req zone=api_limit burst=10 delay=5;\n\n\u6bcf\u79d2\u6807\u51c65\u4e2a\u8bf7\u6c42\uff0cburst\u53ef\u4ee5\u8ba9\u7a81\u53d1\u8bf7\u6c42\u523010\u4e2a\uff0cdelay\u662f\u5f53\u6709\u7a81\u53d1\u8bf7\u6c42\u65f6\u524d\u4e94\u4e2a\u76f4\u63a5\u8bf7\u6c42\uff0c\u5269\u4f59\u7684rate=5/s=200ms/\u4e2a\uff0c\u6d88\u8d391\u4e2a\uff0c\u7b49\u5f85200ms\n</code></pre>","tags":["\u722c\u866b","lua","openresty"]},{"location":"blog/2024/06/03/%E5%BD%93%E6%88%91%E9%81%87%E5%88%B0%E4%BA%86%E7%88%AC%E8%99%AB/#4openresty-lua","title":"4\u3001openresty-lua\u9650\u5236","text":"<p>\u901a\u8fc7openresty\uff0c\u5c06\u8bf7\u6c42\u76f8\u5173\u6570\u636e\u53d1\u9001\u5230\u8bf7\u6c42\u6570\u636e\u5206\u6790\u63a5\u53e3\uff0c\u5206\u6790\u4e4b\u540e\u8fd4\u56de\u7ed3\u679c\uff0c\u518d\u7531openresty\u5224\u65ad\u662f\u5426\u653e\u884c\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u7acb\u7aff\u89c1\u5f71\u3002</p> <p>\u6570\u636e\u5206\u6790\u63a5\u53e3\u5927\u6982\u5f97\u601d\u8def\u5c31\u662f\uff1a\u6b64\u65f6\u505a\u4e00\u4e9b\u9650\u5236\u5df2\u7ecf\u6ca1\u6709\u7528\u4e86\uff08\u540e\u7aef\u4ee3\u7801\u4e5f\u65e0\u6cd5\u66f4\u6539\uff09\uff0c\u53bb\u63a8\u7406\u4eba\u7684\u884c\u4e3a\uff0c\u4e00\u4e2a\u6b63\u5e38\u4eba\u8981\u8bbf\u95ee\u7f51\u7ad9\u65f6\u4f1a\u600e\u4e48\u64cd\u4f5c\uff0c\u722c\u866b\u6bd5\u7adf\u53ea\u662f\u722c\u866b\uff0c\u6ca1\u6cd5\u8ddf\u4eba\u4e00\u6837\u3002</p> <pre><code>local http = require \"resty.http\"\nlocal httpc = http.new()\nlocal json = require(\"cjson\")\n\nlocal uri = ngx.var.noparams_uri\nlocal headers=ngx.req.get_headers()\nlocal ip=headers[\"X-REAL-IP\"] or headers[\"X_FORWARDED_FOR\"] or ngx.var.remote_addr\nlocal ua=headers[\"User-Agent\"] or ''\nlocal white_ua={\"xxxx\",} -- ua \u767d\u540d\u5355\n\n\nlocal api_server=\"xxx:1234\"\nlocal topic_id = \"xxxxx\"\n\nfunction req_fast_api()\n    --return false \u662f\u5f02\u5e38\u8bf7\u6c42\uff0ctrue\u662f\u6b63\u5e38\u8bf7\u6c42\n\n    local data = {\n        TopicId = \"xxxxxxx\",\n        From = 1710086694000,\n        To = 1717151565000,\n        Query = '\"remote_addr:\\\"' .. ip .. '\\\"\"',\n        Limit = 100\n    }\n\n    local jsonStr = json.encode(data)\n\n    local resp, err = httpc:request_uri(\"http://\" .. api_server .. \"/xxx/xxx/xxxx\", {\n        method = \"POST\",\n        body = jsonStr,\n        headers = {\n            [\"Content-Type\"] = \"application/json\",\n        },\n    })\n\n    if not resp then\n        ngx.log(ngx.ERR, \"cls \u65e5\u5fd7\u63a5\u53e3\u6302\u4e86\u3002\")\n        return 500, \"true\"\n    end\n\n    return resp.status, resp.body\nend\n\n\nfunction main()\n    -- \u6821\u9a8cua\u662f\u5426\u5728\u767d\u540d\u5355\u4e2d\n    local outer_i\n    for i, v in ipairs(white_ua) do\n        if string.find(ua, v) then\n            break\n        else\n            outer_i = i\n        end\n    end\n\n    if outer_i == #white_ua then\n        -- ua\u4e0d\u5728\u767d\u540d\u5355\u4e2d\n        ngx.header[\"Server\"] = \"xxxxx/xxx\"\n        local status, body = req_fast_api()\n        ngx.log(ngx.ERR, ip .. \"\u65e5\u5fd7\u63a5\u53e3\u8fd4\u56de\uff1a\" .. body .. \",\u4e14ua\u4e0d\u5728\u767d\u540d\u5355\u4e2d\u3002\")\n        if body == \"false\" then\n            ngx.status = ngx.HTTP_BAD_REQUEST\n            ngx.say(\"xxxx\")\n            ngx.exit(ngx.HTTP_BAD_REQUEST)\n        end\n    end\nend\n\nlocal m = ngx.re.match(uri, \"^/xxxxx/.*$\", \"jo\")\n\nif m then\n    main()\nelse\n    ngx.log(ngx.ERR, \"\u975exxxx\u7684\u5ffd\u7565\" .. uri)\nend\n</code></pre> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["\u722c\u866b","lua","openresty"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/","title":"k8s kubeadm\u6269\u5bb9\u6307\u5b9a\u7248\u672c\u8282\u70b9","text":"<p>k8s kubeadm\u6269\u5bb9\u6307\u5b9a\u7248\u672c\u8282\u70b9.</p>","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#_1","title":"\u524d\u8a00","text":"<p>\u6bcf\u6b21\u90fd\u8981\u641c\u600e\u4e48\u6269\u5bb9\uff0c\u7d22\u6027\u5c31\u81ea\u5df1\u8bb0\u5f55\u4e0b\u6765\u3002</p>","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#1","title":"1\u3001\u65b0\u589e\u673a\u5668","text":"","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#2etchosts","title":"2\u3001\u540c\u6b65/etc/hosts\u6587\u4ef6","text":"","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#3","title":"3\u3001\u5173\u95ed\u65b0\u673a\u5668\u9632\u706b\u5899","text":"<pre><code>systemctl stop firewalld\nsystemctl disable firewalld\n</code></pre>","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#4repo","title":"4\u3001\u65b0\u673a\u5668\u589e\u52a0repo\u6587\u4ef6","text":"<pre><code>cat kubernetes.repo\n\n[kubernetes]\nname=Kubernetes Repo\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\ngpgcheck=0\ngpg=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\nenable=1\n</code></pre>","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#5swap","title":"5\u3001\u5173\u95edswap","text":"<pre><code>swapoff -a\n\n/etc/fstab\n</code></pre>","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#6","title":"6\u3001\u67e5\u770b\u53ef\u4ee5\u5b89\u88c5\u7684\u7248\u672c\uff0c\u5e76\u5b89\u88c5","text":"<pre><code>yum list kubeadm --showduplicates\nyum list kubectl --showduplicates\nyum list kubelet --showduplicates\n\n\nyum install kubectl-1.18.0-0\nyum install kubelet-1.18.0-0\nyum install kubeadm-1.18.0-0\n</code></pre>","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#7","title":"7\u3001\u751f\u6210\u65b0\u673a\u5668\u7684\u52a0\u5165\u547d\u4ee4","text":"<pre><code>\u65b9\u5f0f\u4e00\uff1a\n[root@k8s-master01 ~]# kubeadm token create\nW1024 11:10:21.218806   11133 configset.go:202] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]\nmy8t6c.9ey5l99fymaec6jf\n\n[root@k8s-master01 ~]# openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'\nf4c750ab5e1c14eea6f2cf4fbb42ae7f4873e0a1fb22adca39dc9eaa78ae1b38\n\n\n\u65b9\u5f0f\u4e8c\uff1a\nkubeadm token create --print-join-command\nkubeadm join --token my8t6c.9ey5l99fymaec6jf 192.168.60.195:6443 --discovery-token-ca-cert-hash sha256:f4c750ab5e1c14eea6f2cf4fbb42ae7f4873e0a1fb22adca39dc9eaa78ae1b38\n</code></pre>","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#8","title":"8\u3001\u95ee\u9898\u6765\u4e86","text":"<p>1\uff09\u56e0\u4e3a\u957f\u65f6\u95f4\u6ca1\u6709\u7ba1\u7406\u8fd9\u5957\u96c6\u7fa4\uff0c\u5bfc\u81f4\u5728join\u7684\u8fc7\u7a0b\u4e2d\u62a5\u9519\uff0cThe cluster-info ConfigMap does not yet contain a JWS signature for token ID \"f5evrb\", will try again\uff0c\u8fd9\u4e2a\u62a5\u9519\u662f\u5728join\u7684\u53c2\u6570\u52a0\u4e0a\u4e86--v=2\u770b\u51fa\u6765\u7684\u3002</p> <p>2\uff09\u7136\u540e\u770bapi-server\u7684\u62a5\u9519\u4e4b\u540e\u53d1\u73b0\u62a5\u9519\uff0cUnable to authenticate the request due to an error: x509: certificate has expired or is not yet valid\uff0c\u56e0\u4e3a\u96c6\u7fa4\u7684\u8bc1\u4e66\u8fc7\u671f\u4e86\uff0c\u6240\u4ee5\u901a\u8fc7kubeadm alpha certs renew all \u4e4b\u540e\u53d1\u73b0\u63a7\u5236\u5e73\u9762\u7684\u7ec4\u4ef6\u90fd\u542f\u52a8\u4e86\uff0c\u5c31\u6ca1\u6709\u53bb\u7ba1\u4ed6\uff0c\u4f46\u662f\u8fd9\u662f\u6709\u95ee\u9898\u7684\uff0c\u968f\u540e\u91cd\u542f\u89e3\u51b3\u3002  <pre><code>docker ps | grep -E 'k8s_kube-apiserver|k8s_kube-controller-manager|k8s_kube-scheduler|k8s_etcd_etcd' | awk -F ' ' '{print $1}' | xargs docker restart\nsystemctl restart kubelet\n</code></pre></p>","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2023/10/24/k8s%20kubeadm%E6%89%A9%E5%AE%B9%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%8A%82%E7%82%B9/#9notready","title":"9\u3001\u8282\u70b9\u52a0\u5165\u96c6\u7fa4\u540e\uff0c\u8282\u70b9\u72b6\u6001\u4e00\u76f4\u662fNotReady","text":"<p><pre><code>kubectl get nodes\nk8s-node01     NotReady   &lt;none&gt;   3m36s   v1.18.0\n\nkubectl describe node k8s-node01\nruntime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized\n</code></pre> \u6700\u540e\u770bkubelet\u7684\u62a5\u9519\u627e\u4e0d\u5230flannel\u7684\u63d2\u4ef6\uff0c\u7136\u540e\u53bb\u8001\u673a\u5668\u4e0a\u4e0b\u8f7d\u4e0a\u4f20\uff0c\u6700\u540e\u8282\u70b9\u6b63\u5e38\u3002</p> <p><pre><code>journalctl -fu kubelet \n\nOct 23 23:46:51 k8s-node01 kubelet[5447]: : [failed to find plugin \"flannel\" in path [/opt/cni/bin]]\nOct 23 23:46:51 k8s-node01 kubelet[5447]: W1023 23:46:51.095117    5447 cni.go:237] Unable to update cni config: no valid networks found in /etc/cni/net.d\n</code></pre> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["k8s","kubeadm","\u6269\u5bb9\u8282\u70b9"]},{"location":"blog/2024/02/21/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%90%86%E8%A7%A3/","title":"\u5bb9\u5668\u7f51\u7edc\u7406\u89e3","text":"<p>\u5bb9\u5668\u7f51\u7edc\u7406\u89e3\u3002</p> <p>\u5bb9\u5668\u4e2d\u7684\u5e94\u7528\u751f\u6210\u7f51\u7edc\u8bf7\u6c42 -&gt; veth-container -&gt; veth-host -&gt; \u7f51\u7edc\u6865\u63a5\uff08\u5982docker0\uff09-&gt; \u5bbf\u4e3b\u673a\u8def\u7531 -&gt; iptables -&gt;\u7269\u7406\u7f51\u5361 -&gt; \u5916\u90e8\u7f51\u7edc</p>","tags":["docker","iptables"]},{"location":"blog/2024/02/21/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%90%86%E8%A7%A3/#1veth-container-veth-host","title":"1\u3001veth-container -&gt; veth-host","text":"<p>Docker \u6216 Kubernetes \u521b\u5efa\u4e00\u5bf9\u865a\u62df\u7f51\u5361\uff08veth pair\uff09\uff0c\u4e00\u7aef\u653e\u5728\u5bbf\u4e3b\u673a\u4e0a\uff08\u79f0\u4f5cveth-host\uff09\uff0c\u53e6\u4e00\u7aef\u653e\u5728\u5bb9\u5668\u4e2d\uff08\u79f0\u4f5cveth-container\uff09\u3002 \u5bbf\u4e3b\u673a\u4e0a\u7684\u90a3\u7aef\u865a\u62df\u7f51\u5361\u88ab\u8fde\u63a5\u5230\u4e00\u4e2a\u7f51\u7edc\u6865\u63a5\uff08\u5982 Docker \u9ed8\u8ba4\u7684docker0\u6865\uff09\uff0c\u8fd9\u4e2a\u6865\u63a5\u5141\u8bb8\u7f51\u7edc\u5305\u5728\u5404\u4e2a\u5bb9\u5668\u4ee5\u53ca\u5bbf\u4e3b\u673a\u4e4b\u95f4\u8f6c\u53d1\u3002</p> <p>\u8fd9\u79cd\u673a\u5236\u7684\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u5f53Docker\u5bb9\u5668\u542f\u52a8\u65f6\uff0cDocker\u670d\u52a1\u4f1a\u521b\u5efa\u4e00\u5bf9<code>veth</code>\u63a5\u53e3\u3002\u5047\u8bbe\u5bf9\u4e8e\u7279\u5b9a\u7684\u5bb9\u5668\u521b\u5efa\u7684<code>veth</code>\u63a5\u53e3\u88ab\u79f0\u4e3a<code>vethXXX</code>\u548c<code>vethYYY</code>\u3002</p> </li> <li> <p><code>vethXXX</code>\u8fd9\u4e00\u7aef\u88ab\u653e\u5165\u5bb9\u5668\u7684\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\uff0c\u5e76\u901a\u5e38\u88ab\u547d\u540d\u4e3a<code>eth0</code>\uff0c\u8fd9\u6837\u5bb9\u5668\u5185\u90e8\u7684\u8fdb\u7a0b\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u53d1\u9001\u548c\u63a5\u6536\u7f51\u7edc\u6570\u636e\u3002\u800c<code>vethYYY</code>\u8fd9\u7aef\u7559\u5728\u5bbf\u4e3b\u673a\u7684\u5168\u5c40\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u4e2d\u3002</p> </li> <li> <p><code>vethYYY</code>\u8fd9\u7aef\u63a5\u53e3\u5c06\u88ab\u8fde\u63a5\u5230Docker\u7684\u865a\u62df\u7f51\u6865\u4e0a\uff0c\u4f8b\u5982\u9ed8\u8ba4\u7684\u7f51\u6865<code>docker0</code>\u3002\u8fd9\u4e2a\u865a\u62df\u7f51\u6865\u5141\u8bb8\u5bb9\u5668\u4e4b\u95f4\u5728\u76f8\u540c\u5bbf\u4e3b\u673a\u4e0a\u76f8\u4e92\u901a\u4fe1\uff0c\u540c\u65f6\u4e5f\u5141\u8bb8\u5bb9\u5668\u4e0e\u5bbf\u4e3b\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</p> </li> </ol> <p></p> <pre><code>[root@jenkins-master ~]# docker inspect -f '{{.State.Pid}}' nginx-dd\n29044\n[root@jenkins-master ~]# nsenter -t 29044 -n ip addr\n</code></pre>","tags":["docker","iptables"]},{"location":"blog/2024/02/21/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%90%86%E8%A7%A3/#2veth-host-docker0","title":"2\u3001veth-host -&gt; \u7f51\u7edc\u6865\u63a5\uff08\u5982docker0\uff09","text":"<p>  veth pair \u5728\u5bbf\u4e3b\u673a\u4e0a\u7684\u63a5\u53e3\u52a0\u5165\u7f51\u6865\u4e2d\u3002</p>","tags":["docker","iptables"]},{"location":"blog/2024/02/21/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%90%86%E8%A7%A3/#3docker0-","title":"3\u3001\u7f51\u7edc\u6865\u63a5\uff08\u5982docker0\uff09-&gt; \u5bbf\u4e3b\u673a\u8def\u7531","text":"<p>\u5728 CentOS \u7cfb\u7edf\u4e2d\uff0c\u7f51\u6865 (<code>bridge</code>) \u662f\u4e00\u4e2a\u5de5\u4f5c\u5728 OSI \u6a21\u578b\u7684\u7b2c\u4e8c\u5c42\uff08\u6570\u636e\u94fe\u8def\u5c42\uff09\u7684\u8bbe\u5907\uff0c\u5b83\u8d1f\u8d23\u8fde\u63a5\u4e24\u4e2a\u6216\u591a\u4e2a\u7f51\u7edc\u6bb5\uff0c\u4f7f\u5b83\u4eec\u8868\u73b0\u5f97\u50cf\u662f\u540c\u4e00\u7f51\u7edc\u3002\u5b83\u901a\u8fc7 MAC \u5730\u5740\u6765\u8f6c\u53d1\u6d41\u91cf\uff1b\u7136\u800c\uff0c\u5f53\u6211\u4eec\u5728\u7f51\u6865\u4e0a\u914d\u7f6e\u4e86\u4e00\u4e2a IP \u5730\u5740\u65f6\uff0c\u8fd9\u4e2a\u7f51\u6865\u4e5f\u53ef\u4ee5\u53c2\u4e0e\u7b2c\u4e09\u5c42\uff08\u7f51\u7edc\u5c42\uff09\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8def\u7531\u51b3\u7b56\u3002</p> <p>\u8fd9\u79cd\u914d\u7f6e\u5141\u8bb8\u7f51\u6865\u8bbe\u5907\u53c2\u4e0e\u5230\u64cd\u4f5c\u7cfb\u7edf\u7684 IP \u8def\u7531\u51b3\u7b56\u4e2d\u3002\u4e00\u65e6\u4e00\u4e2a\u7f51\u6865\u914d\u7f6e\u4e86 IP \u5730\u5740\uff0c\u5c31\u8ddf\u5176\u4ed6\u4efb\u4f55\u7f51\u7edc\u63a5\u53e3\u4e00\u6837\uff0c\u5b83\u4f1a\u51fa\u73b0\u5728\u64cd\u4f5c\u7cfb\u7edf\u7684\u8def\u7531\u8868\u4e2d\u3002\u8def\u7531\u8868\u51b3\u5b9a\u4e86 IP \u6570\u636e\u5305\u5982\u4f55\u4ece\u4e00\u4e2a\u63a5\u53e3\uff08\u53ef\u4ee5\u662f\u7269\u7406\u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u662f\u903b\u8f91\u63a5\u53e3\u5982\u7f51\u6865\uff09\u88ab\u8def\u7531\u5230\u53e6\u4e00\u4e2a\u63a5\u53e3\u3002</p> <p>\u7f51\u6865\u4e0a\u914d\u7f6e\u7684 IP \u5730\u5740\u4f7f\u5f97\u7f51\u6865\u53ef\u4ee5\uff1a</p> <ul> <li>\u63a5\u6536\u53d1\u5f80\u5176 IP \u5730\u5740\u7684\u6d41\u91cf\u3002</li> <li>\u53d1\u9001\u6570\u636e\u5305\u5230\u7f51\u7edc\u4e0a\uff0c\u8fd9\u4e9b\u6570\u636e\u5305\u4f1a\u7ecf\u8def\u7531\u8868\u4e2d\u5b9a\u4e49\u7684\u4e0b\u4e00\u8df3\u8def\u7531\u8d70\u5411\u76ee\u7684\u5730\u3002</li> <li>\u4f5c\u4e3a\u7f51\u6865\u4e0a\u5176\u4ed6\u8bbe\u5907\u7684\u7f51\u5173\u3002</li> </ul> <p>\u901a\u5e38\uff0c\u5f53\u4e00\u4e2a\u6865\u63a5\u7f51\u7edc\u4e2d\u7684\u8bbe\u5907\u8981\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u5305\u5230\u53e6\u4e00\u4e2a\u7f51\u7edc\u6bb5\uff08\u53ef\u80fd\u662f\u901a\u8fc7\u4e92\u8054\u7f51\uff09\u65f6\uff0c\u6570\u636e\u5305\u4f1a\u9001\u5230\u7f51\u6865\u8bbe\u5907\uff0c\u4ece\u90a3\u91cc\u6839\u636e CentOS \u7684\u8def\u7531\u8868\u51b3\u7b56\u6765\u786e\u5b9a\u4e0b\u4e00\u6b65\u884c\u52a8\u3002\u5982\u679c\u8def\u7531\u8868\u4e2d\u6709\u5339\u914d\u8be5\u76ee\u7684\u5730\u7684\u8def\u7531\uff0c\u6570\u636e\u5305\u5c06\u6839\u636e\u8fd9\u4e2a\u8def\u7531\u8fdb\u884c\u8f6c\u53d1\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5316\u7684\u4f8b\u5b50\uff1a</p> <ol> <li>\u8bbe\u5907A\uff08\u8fde\u63a5\u5230\u7f51\u6865 br0 \u7f51\u7edc\uff09\u53d1\u9001\u6570\u636e\u5305\u5230\u8bbe\u5907B\uff08\u4e92\u8054\u7f51\u4e0a\u7684\u67d0\u4e2aIP\u5730\u5740\uff09\u3002</li> <li>\u6570\u636e\u5305\u9996\u5148\u5230\u8fbe\u7f51\u6865 br0\u3002</li> <li>\u5982\u679c br0 \u6709\u4e00\u4e2a IP \u5730\u5740\uff0c\u5b83\u4f1a\u68c0\u67e5\u5b83\u7684\u8def\u7531\u8868\u6765\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u6570\u636e\u5305\u3002</li> <li>\u5982\u679c\u8def\u7531\u8868\u6307\u793a\u5b83\u5e94\u8be5\u901a\u8fc7\u67d0\u4e2a\u7269\u7406\u63a5\u53e3\u53d1\u9001\uff08\u6bd4\u5982 eth0\uff09\uff0c\u5b83\u4f1a\u5c06\u6570\u636e\u5305\u53d1\u5230\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u518d\u628a\u6570\u636e\u5305\u9001\u5230\u5916\u90e8\u7f51\u7edc\u3002</li> </ol> <p>\u6240\u4ee5\u5373\u4fbf\u7f51\u6865\u662f\u7b2c\u4e8c\u5c42\u8bbe\u5907\uff0c\u4e00\u65e6\u914d\u7f6e\u4e86 IP \u5730\u5740\uff0c\u5b83\u5c31\u80fd\u591f\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u8def\u7531\u8868\u8fdb\u884c\u7b2c\u4e09\u5c42\u7684\u8def\u7531\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5728\u4e00\u4e9b\u8bbe\u7f6e\u4e2d\uff0c\u7f51\u6865\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u865a\u62df\u673a\u6216\u5bb9\u5668\u73af\u5883\u4e2d\u7684\u9ed8\u8ba4\u7f51\u5173\u3002</p> <p></p>","tags":["docker","iptables"]},{"location":"blog/2024/02/21/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%90%86%E8%A7%A3/#4-iptables","title":"4\u3001\u5bbf\u4e3b\u673a\u8def\u7531 -&gt; iptables","text":"<p>\u8def\u7531\u8868\u8d1f\u8d23\u51b3\u5b9a\u672c\u5730\u751f\u6210\u7684\u7f51\u7edc\u6570\u636e\u5305\u8be5\u5982\u4f55\u5728\u5bbf\u4e3b\u673a\u7684\u4e0d\u540c\u7f51\u7edc\u63a5\u53e3\u4e4b\u95f4\u8f6c\u53d1\uff0c\u662f\u5426\u8981\u8f6c\u53d1\u5230\u7269\u7406\u7f51\u5361\uff0c\u6216\u8005\u662f\u7559\u5728\u672c\u5730\u5904\u7406\u3002 iptables\u8d1f\u8d23\u5bf9\u7ecf\u8fc7\u5bbf\u4e3b\u673a\u7684\u6570\u636e\u5305\u8fdb\u884c\u68c0\u67e5\uff0c\u57fa\u4e8e\u4e00\u7cfb\u5217\u7684\u89c4\u5219\u8fdb\u884c\u4fee\u6539\uff08\u6bd4\u5982NAT\uff09\uff0c\u6216\u8005\u51b3\u5b9a\u662f\u5426\u5141\u8bb8\u7279\u5b9a\u7684\u6570\u636e\u6d41\u901a\u8fc7\u3002</p> <p></p> Filter\u8868 <pre><code>*filter\n:INPUT ACCEPT [244972180:39059491022]\n:FORWARD DROP [0:0]\n:OUTPUT ACCEPT [439290180:389638265797]\n:DOCKER - [0:0]\n:DOCKER-ISOLATION-STAGE-1 - [0:0]\n:DOCKER-ISOLATION-STAGE-2 - [0:0]\n:DOCKER-USER - [0:0]\n-A FORWARD -j DOCKER-USER\n-A FORWARD -j DOCKER-ISOLATION-STAGE-1\n-A FORWARD -o br-40d652e0aac8 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n-A FORWARD -o br-40d652e0aac8 -j DOCKER\n-A FORWARD -i br-40d652e0aac8 ! -o br-40d652e0aac8 -j ACCEPT\n-A FORWARD -i br-40d652e0aac8 -o br-40d652e0aac8 -j ACCEPT\n-A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n-A FORWARD -o docker0 -j DOCKER\n-A FORWARD -i docker0 ! -o docker0 -j ACCEPT\n-A FORWARD -i docker0 -o docker0 -j ACCEPT\n-A DOCKER -d 172.18.0.2/32 ! -i br-40d652e0aac8 -o br-40d652e0aac8 -p tcp -m tcp --dport 80 -j ACCEPT\n-A DOCKER-ISOLATION-STAGE-1 -i br-40d652e0aac8 ! -o br-40d652e0aac8 -j DOCKER-ISOLATION-STAGE-2\n-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2\n-A DOCKER-ISOLATION-STAGE-1 -j RETURN\n-A DOCKER-ISOLATION-STAGE-2 -o br-40d652e0aac8 -j DROP\n-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP\n-A DOCKER-ISOLATION-STAGE-2 -j RETURN\n-A DOCKER-USER -j RETURN\nCOMMIT\n# Completed on Tue Feb 20 15:06:32 2024\n</code></pre> <p></p> Nat\u8868 <pre><code># Generated by iptables-save v1.4.21 on Tue Feb 20 15:06:32 2024\n*nat\n:PREROUTING ACCEPT [6782554:235185454]\n:INPUT ACCEPT [6770892:234485508]\n:OUTPUT ACCEPT [10758364:662367917]\n:POSTROUTING ACCEPT [10792762:664241249]\n:DOCKER - [0:0]\n-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER\n-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER\n-A POSTROUTING -s 172.18.0.0/16 ! -o br-40d652e0aac8 -j MASQUERADE\n-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE\n-A POSTROUTING -s 172.18.0.2/32 -d 172.18.0.2/32 -p tcp -m tcp --dport 80 -j MASQUERADE\n-A DOCKER -i br-40d652e0aac8 -j RETURN\n-A DOCKER -i docker0 -j RETURN\n-A DOCKER ! -i br-40d652e0aac8 -p tcp -m tcp --dport 80 -j DNAT --to-destination 172.18.0.2:80\nCOMMIT\n# Completed on Tue Feb 20 15:06:32 2024\n# Generated by iptables-save v1.4.21 on Tue Feb 20 15:06:32 2024\n</code></pre> <p>\u8fd9\u4e9b\u89c4\u5219\u4f3c\u4e4e\u914d\u7f6e\u81ea Docker \u4ee5\u7ba1\u7406\u5bb9\u5668\u7684\u7f51\u7edc\u901a\u4fe1\u3002\u4e0b\u9762\u6211\u5c06\u4e00\u4e00\u89e3\u91ca\u5b83\u4eec\u7684\u542b\u4e49\uff1a</p> <ol> <li><code>-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER</code></li> <li> <p>\u8fd9\u6761\u89c4\u5219\u6dfb\u52a0\u5230 <code>PREROUTING</code> \u94fe\uff0c\u5b83\u5339\u914d\u6240\u6709\u76ee\u6807\u7c7b\u578b\u4e3a <code>LOCAL</code> \u7684\u6570\u636e\u5305\uff0c\u5e76\u5c06\u5b83\u4eec\u8df3\u8f6c\u5230\u4e00\u4e2a\u540d\u4e3a <code>DOCKER</code> \u7684\u81ea\u5b9a\u4e49\u94fe\uff08\u8fd9\u662f Docker \u4f7f\u7528\u7684\uff09\u3002</p> </li> <li> <p><code>-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER</code></p> </li> <li> <p>\u8fd9\u6761\u89c4\u5219\u6dfb\u52a0\u5230 <code>OUTPUT</code> \u94fe\uff0c\u5b83\u8868\u793a\u5982\u679c\u8f93\u51fa\u6570\u636e\u5305\u7684\u76ee\u7684\u5730\u5740\u4e0d\u662f\u672c\u5730\u56de\u73af\u5730\u5740\uff08localhost\uff0c\u4e5f\u5c31\u662f127.0.0.0/8\u4e4b\u5916\uff09\uff0c\u5e76\u4e14\u76ee\u7684\u7c7b\u578b\u4e3a <code>LOCAL</code>\uff0c\u4e5f\u5c06\u5b83\u4eec\u8df3\u8f6c\u5230 <code>DOCKER</code> \u94fe\u3002</p> </li> <li> <p><code>-A POSTROUTING -s 172.18.0.0/16 ! -o br-40d652e0aac8 -j MASQUERADE</code></p> </li> <li> <p>\u8fd9\u6761\u89c4\u5219\u6dfb\u52a0\u5230 <code>POSTROUTING</code> \u94fe\uff0c\u5b83\u4f1a\u5bf9\u6e90\u5730\u5740\u4e3a <code>172.18.0.0/16</code> \u7684\u6570\u636e\u5305\uff0c\u5e76\u4e14\u4e0d\u662f\u4ece\u63a5\u53e3 <code>br-40d652e0aac8</code> \u51fa\u53bb\u7684\uff0c\u6267\u884c <code>MASQUERADE</code> \u52a8\u4f5c\u3002<code>MASQUERADE</code> \u7c7b\u4f3c\u4e8eSNAT\uff0c\u4f46\u6e90IP\u4f1a\u6839\u636e\u51fa\u53e3\u63a5\u53e3\u7684IP\u52a8\u6001\u53d8\u5316\uff0c\u5e38\u7528\u4e8e\u52a8\u6001IP\u573a\u666f\uff0c\u5982\u62e8\u53f7\u8fde\u63a5\u4e92\u8054\u7f51\u3002Docker \u4f7f\u7528\u8fd9\u4e2a\u6765\u5141\u8bb8\u5bb9\u5668\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\u3002</p> </li> <li> <p><code>-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE</code></p> </li> <li> <p>\u4e0e\u7b2c3\u70b9\u7c7b\u4f3c\uff0c\u8fd9\u4e2a\u89c4\u5219\u5e94\u7528\u4e8e\u6e90\u5730\u5740\u4e3a <code>172.17.0.0/16</code> \u7684\u6570\u636e\u5305\uff0c\u4e0d\u662f\u4ece\u63a5\u53e3 <code>docker0</code> \u51fa\u53bb\u7684\u3002</p> </li> <li> <p><code>-A POSTROUTING -s 172.18.0.2/32 -d 172.18.0.2/32 -p tcp -m tcp --dport 80 -j MASQUERADE</code></p> </li> <li> <p>\u8be5\u89c4\u5219\u9488\u5bf9\u4ece\u5355\u4e2aIP <code>172.18.0.2</code> \u53d1\u51fa\u3001\u76ee\u7684\u5730\u4e5f\u662f\u6b64IP\u3001\u4ee5\u53ca\u76ee\u7684\u7aef\u53e3\u4e3a80\u7684TCP\u6570\u636e\u5305\uff0c\u505a<code>MASQUERADE</code>\u5904\u7406\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u5904\u7406\u5bb9\u5668\u4e0e\u81ea\u5df1\u53d1\u8d77\u8ddf\u81ea\u5df1\u7684\u8fde\u63a5\u3002</p> </li> <li> <p><code>-A DOCKER -i br-40d652e0aac8 -j RETURN</code></p> </li> <li> <p>\u5bf9\u4e8e\u901a\u8fc7 <code>br-40d652e0aac8</code> \u63a5\u53e3\u8fdb\u5165\u7684\u6570\u636e\u5305\uff0c\u8fd9\u6761\u89c4\u5219\u5728 <code>DOCKER</code> \u94fe\u4e2d\u76f4\u63a5\u8fd4\u56de\uff0c\u5373\u4e0d\u505a\u7279\u6b8a\u5904\u7406\u3002</p> </li> <li> <p><code>-A DOCKER -i docker0 -j RETURN</code></p> </li> <li> <p>\u7c7b\u4f3c\u4e0a\u4e00\u6761\u89c4\u5219\uff0c\u901a\u8fc7 <code>docker0</code> \u7f51\u6865\u63a5\u53e3\u8fdb\u5165\u7684\u6570\u636e\u5305\u4e0d\u505a\u5904\u7406\uff0c\u76f4\u63a5\u8fd4\u56de\u3002</p> </li> <li> <p><code>-A DOCKER ! -i br-40d652e0aac8 -p tcp -m tcp --dport 80 -j DNAT --to-destination 172.18.0.2:80</code></p> </li> <li>\u8be5\u89c4\u5219\u5bf9\u975e\u4ece <code>br-40d652e0aac8</code> \u63a5\u53e3\u8fdb\u5165\u3001\u76ee\u7684\u7aef\u53e3\u4e3a80\u7684TCP\u6570\u636e\u5305\uff0c\u6267\u884cDNAT\u52a8\u4f5c\uff0c\u4fee\u6539\u76ee\u7684\u5730\u5740\u4e3a <code>172.18.0.2:80</code>\u3002\u8fd9\u901a\u5e38\u662f\u5728\u505a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u5230\u8fbe\u5bbf\u4e3b\u673a\u67d0\u7aef\u53e3\u7684\u6570\u636e\u5305\u8f6c\u53d1\u5230\u7279\u5b9a\u5bb9\u5668\u7684\u7aef\u53e3\u3002</li> </ol> <p>\u4ee5\u4e0a\u89c4\u5219\u96c6\u662f Docker \u5728\u5bbf\u4e3b\u673a\u4e0a\u914d\u7f6e\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u5b9e\u73b0\u5bb9\u5668\u4e4b\u95f4\u4ee5\u53ca\u5bb9\u5668\u4e0e\u5916\u90e8\u7f51\u7edc\u4e4b\u95f4\u7684\u6d41\u7545\u901a\u4fe1\u3002\u901a\u8fc7\u8fd9\u4e9b\u89c4\u5219\u53ef\u4ee5\u770b\u51fa Docker \u4f7f\u7528 <code>iptables</code> \u7684\u5b9a\u5236\u94fe\u6765\u5904\u7406\u5bb9\u5668\u7f51\u7edc\u7684\u590d\u6742\u6027\uff0c\u800c\u53ef\u8bc6\u522b\u6027\u5219\u7531 Docker \u672c\u8eab\u7ef4\u62a4\u3002</p> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["docker","iptables"]},{"location":"blog/2024/02/21/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%90%86%E8%A7%A3/#forward","title":"FORWARD \u89c4\u5219\uff1a","text":"<ol> <li> <p><code>-A FORWARD -j DOCKER-USER</code>\uff1a   \u5c06\u6240\u6709 FORWARD \u94fe\u7684\u6d41\u91cf\u5b9a\u5411\u5230\u540d\u4e3a DOCKER-USER \u7684\u81ea\u5b9a\u4e49\u94fe\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u7ed9\u7528\u6237\u63d0\u4f9b\u5728\u81ea\u5b9a\u4e49\u94fe\u4e2d\u63d2\u5165\u4ed6\u4eec\u81ea\u5df1\u7684 FORWARD \u89c4\u5219\u7684\u673a\u4f1a\uff0c\u4e0d\u901a\u8fc7 Docker \u81ea\u52a8\u751f\u6210\u7684\u89c4\u5219\u3002</p> </li> <li> <p><code>-A FORWARD -j DOCKER-ISOLATION-STAGE-1</code>\uff1a   \u6b64\u89c4\u5219\u628a\u6d41\u91cf\u9001\u5230\u9694\u79bb\u9636\u6bb5\u94fe\u3002Docker \u4f7f\u7528\u8fd9\u4e9b\u89c4\u5219\u6765\u963b\u6b62\u4e0d\u540c\u7f51\u7edc\u7684\u5bb9\u5668\u4e4b\u95f4\u7684\u76f4\u63a5\u901a\u4fe1\uff0c\u5b9e\u65bd\u7f51\u7edc\u9694\u79bb\u3002</p> </li> <li> <p><code>-A FORWARD -o br-40d652e0aac8 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</code>\uff1a   \u6b64\u89c4\u5219\u5141\u8bb8\u4e0e\u5df2\u7ecf\u5efa\u7acb\u6216\u76f8\u5173\u8054\u7684\u8fde\u63a5\u53d1\u51fa\u7684\u6d41\u91cf\u901a\u8fc7 Docker \u7f51\u6865 <code>br-40d652e0aac8</code>\u3002</p> </li> <li> <p><code>-A FORWARD -o br-40d652e0aac8 -j DOCKER</code>\uff1a   \u5bf9\u4e8e\u53d1\u51fa\u7684\u6d41\u91cf\uff0c\u5982\u679c\u5b83\u662f\u4ece\u7f51\u6865 <code>br-40d652e0aac8</code> \u4f20\u51fa\u7684\uff0c\u5c31\u8df3\u8f6c\u5230 DOCKER \u94fe\u3002</p> </li> <li> <p><code>-A FORWARD -i br-40d652e0aac8 ! -o br-40d652e0aac8 -j ACCEPT</code>\uff1a   \u8fd9\u6761\u89c4\u5219\u5141\u8bb8\u6240\u6709\u8fdb\u5165\u7f51\u6865 <code>br-40d652e0aac8</code> \u4e14\u4e0d\u662f\u4ece\u8be5\u7f51\u6865\u4f20\u51fa\u7684\u6d41\u91cf\u3002</p> </li> <li> <p><code>-A FORWARD -i br-40d652e0aac8 -o br-40d652e0aac8 -j ACCEPT</code>\uff1a   \u5141\u8bb8\u6240\u6709\u4ece\u7f51\u6865 <code>br-40d652e0aac8</code> \u8fdb\u6765\u540c\u65f6\u4e5f\u4ece\u540c\u4e00\u7f51\u6865\u51fa\u53bb\u7684\u6d41\u91cf\u3002\u8fd9\u6837\u7684\u6d41\u91cf\u53d1\u751f\u5728\u540c\u4e00 Docker \u7f51\u6865\u5185\u90e8\u7684\u4e0d\u540c\u5bb9\u5668\u4e4b\u95f4\u3002</p> </li> </ol>","tags":["docker","iptables"]},{"location":"blog/2024/02/21/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%90%86%E8%A7%A3/#docker","title":"DOCKER \u94fe\uff1a","text":"<ol> <li><code>-A DOCKER -d 172.18.0.2/32 ! -i br-40d652e0aac8 -o br-40d652e0aac8 -p tcp -m tcp --dport 80 -j ACCEPT</code>\uff1a   \u6b64\u89c4\u5219\u5141\u8bb8\u4efb\u4f55\u4e0d\u662f\u6765\u81ea\u7f51\u6865 <code>br-40d652e0aac8</code> \u7684\u6d41\u91cf\u5230\u8fbe IP \u4e3a 172.18.0.2 \u7684\u8bbe\u5907\uff08\u5bb9\u5668\uff09\u4e0a\u7684 TCP \u7aef\u53e3 80\u3002</li> </ol>","tags":["docker","iptables"]},{"location":"blog/2024/02/21/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%90%86%E8%A7%A3/#docker-isolation-stage","title":"DOCKER-ISOLATION-STAGE \u94fe\uff1a","text":"<ol> <li> <p><code>-A DOCKER-ISOLATION-STAGE-1 -i br-40d652e0aac8 ! -o br-40d652e0aac8 -j DOCKER-ISOLATION-STAGE-2</code>\uff1a   \u5982\u679c\u6d41\u91cf\u662f\u4ece\u7f51\u6865 <code>br-40d652e0aac8</code> \u8fdb\u6765\u4e14\u4e0d\u662f\u4f20\u51fa\u540c\u4e00\u7f51\u6865\u7684\uff0c\u5219\u5b9a\u5411\u5230\u9694\u79bb\u9636\u6bb5 2\u3002</p> </li> <li> <p><code>-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2</code>\uff1a   \u5bf9\u4e8e\u8fdb\u5165\u9ed8\u8ba4\u7684 Docker \u7f51\u6865 <code>docker0</code> \u800c\u4e14\u4e0d\u662f\u79bb\u5f00\u5b83\u7684\u6d41\u91cf\uff0c\u8df3\u8f6c\u5230\u9694\u79bb\u9636\u6bb5 2\u3002</p> </li> <li> <p><code>-A DOCKER-ISOLATION-STAGE-1 -j RETURN</code>\uff1a     \u6240\u6709\u4e0d\u7b26\u5408\u9694\u79bb\u89c4\u5219\u7684\u6d41\u91cf\u7ed3\u675f\u9694\u79bb\u9636\u6bb5 1 \u5e76\u8fd4\u56de\u5230 FORWARD \u3002</p> </li> <li> <p><code>-A DOCKER-ISOLATION-STAGE-2 -o br-40d652e0aac8 -j DROP</code>\uff1a     \u4e22\u5f03\u6240\u6709\u4f20\u51fa\u7f51\u6865 <code>br-40d652e0aac8</code> \u7684\u6d41\u91cf\uff0c\u4ee5\u786e\u4fdd\u7f51\u7edc\u9694\u79bb\u3002</p> </li> <li> <p><code>-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP</code>\uff1a     \u4e22\u5f03\u6240\u6709\u4f20\u51fa\u7f51\u6865 <code>docker0</code> \u7684\u6d41\u91cf\uff0c\u540c\u6837\u4e3a\u4e86\u7f51\u7edc\u9694</p> </li> </ol>","tags":["docker","iptables"]},{"location":"blog/2023/07/04/See%20pam_nologin%288%29/","title":"System is booting up. See pam_nologin(8)","text":"<p>System is booting up. See pam_nologin(8).</p> <p>\u51fa\u73b0\u7684\u60c5\u51b5\u5343\u5947\u767e\u602a\uff0c\u6b64\u6587\u6863\u4ec5\u63d0\u4f9b\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u4e2a\u601d\u8def\u3002</p>"},{"location":"blog/2023/07/04/See%20pam_nologin%288%29/#_1","title":"\u524d\u8a00","text":"<p>System is booting up. See pam_nologin(8) \uff1f \u8fd9\u662f\u4ec0\u4e48\u9524\u5b50\u95ee\u9898\uff1f\uff0c\u5feb\u4e0b\u73ed\u7684\u65f6\u5019\u9694\u58c1\u8001\u738b\u627e\u6211\u8bf4\u4ed6\u767b\u5f55\u4e0d\u4e0a\u7ebf\u4e0a\u673a\u5668\u4e86\uff0c\u6211\u8bd5\u4e86\u4e00\u4e0broot\u7528\u6237\u53ef\u4ee5\uff0c\u7136\u540e\u666e\u901a\u7528\u6237\u4e0d\u884c\uff0c\u7136\u540e\u6211\u5c31\u8ba9\u4ed6\u5148\u4e34\u65f6\u7528root\u7528\u4e00\u4e0b\uff0c\u6211\u5148\u67e5\u67e5\u95ee\u9898\u3002</p> <p>\u5b8c\u6574\u62a5\u9519\u662f\u8fd9\u4e2a\u6837\u5b50\u7684 <pre><code>[root@xxx~]# ssh xxx@10.10.1.1\nSystem is booting up. See pam_nologin(8)\nAuthentication failed.\n</code></pre> \u5173\u4e8e\u8fd9\u4e2a\u670d\u52a1\u5668\u57fa\u7840\u7684\u65e5\u5fd7\u4e5f\u90fd\u67e5\u4e86\uff0c\u6ca1\u6709\u4ec0\u4e48\u5f02\u5e38\u4e4b\u5904\u3002\u767e\u5ea6\u6216\u8c37\u6b4c\u7684\u90fd\u662f\u6ca1\u5173\u7cfb\u7684\u7ed3\u679c\uff0c\u6211\u4e5f\u6ca1\u6709\u968f\u4fbf\u8bd5\uff0c\u7ebf\u4e0a\u673a\u5668\u8c28\u614e\u64cd\u4f5c\u3002</p>"},{"location":"blog/2023/07/04/See%20pam_nologin%288%29/#1","title":"1\u3001\u67e5\u627e\u95ee\u9898","text":""},{"location":"blog/2023/07/04/See%20pam_nologin%288%29/#11","title":"1.1\u3001\u4e00\u4e2a\u601d\u8def","text":"<p>\u6458\u6284\u81eachatgpt\u7684\u4e00\u4e2a\u65e0\u7528\u7684\u7b54\u6848\uff0c\u4f46\u662f\u7ed9\u6211\u63d0\u4f9b\u4e86\u4e00\u4e2a\u601d\u8def\u3002</p> <pre><code>pam_nologin(8)\u662f\u4e00\u4e2a\u7528\u4e8eLinux\u7cfb\u7edf\u7684PAM\uff08Pluggable Authentication Modules\uff09\u6a21\u5757\uff0c\u5b83\u5141\u8bb8\u7ba1\u7406\u5458\u5728\u7cfb\u7edf\u7ef4\u62a4\u671f\u95f4\u963b\u6b62\u7528\u6237\u767b\u5f55\u3002\u5f53\u7cfb\u7edf\u542f\u52a8\u65f6\uff0cPAM\u4f1a\u68c0\u67e5\u662f\u5426\u5b58\u5728/etc/nologin\u6587\u4ef6\uff0c\u5982\u679c\u8be5\u6587\u4ef6\u5b58\u5728\u4e14\u4e0d\u4e3a\u7a7a\uff0c\u5219PAM\u5c06\u62d2\u7edd\u6240\u6709\u975e\u7279\u6743\u7528\u6237\u7684\u767b\u5f55\u8bf7\u6c42\uff0c\u5e76\u663e\u793a\u5176\u4e2d\u6307\u5b9a\u7684\u6d88\u606f\u3002\n\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c/etc/nologin\u6587\u4ef6\u53ea\u6709\u5728\u7cfb\u7edf\u91cd\u542f\u671f\u95f4\u624d\u88ab\u521b\u5efa\uff0c\u5e76\u5728\u7cfb\u7edf\u91cd\u542f\u540e\u81ea\u52a8\u5220\u9664\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u770b\u5230\u4e86\u7c7b\u4f3c\"See pam_nologin(8)\"\u7684\u6d88\u606f\uff0c\u4f46\u7cfb\u7edf\u6ca1\u6709\u91cd\u542f\uff0c\u90a3\u53ef\u80fd\u662f\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u5bfc\u81f4/etc/nologin\u6587\u4ef6\u672a\u80fd\u6b63\u786e\u5730\u5220\u9664\u3002\n\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\n\n\u4ee5root\u8eab\u4efd\u767b\u5f55\u5230\u7cfb\u7edf\u3002\n\u68c0\u67e5/etc/nologin\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff1als -l /etc/nologin\n\u5982\u679c\u5b58\u5728\uff0c\u8bf7\u5220\u9664\u8be5\u6587\u4ef6\uff1arm /etc/nologin\n\u6267\u884c\u4e0a\u8ff0\u6b65\u9aa4\u540e\uff0c\u518d\u6b21\u5c1d\u8bd5\u767b\u5f55\u5e94\u8be5\u5c31\u4e0d\u4f1a\u51fa\u73b0\"See pam_nologin(8)\"\u7684\u6d88\u606f\u4e86\u3002\n</code></pre>"},{"location":"blog/2023/07/04/See%20pam_nologin%288%29/#12","title":"1.2\u3001\u7ee7\u7eed\u5206\u6790","text":"<p>\u6743\u9650\u5565\u7684\u6211\u90fd\u6ca1\u6709\u52a8\u8fc7\uff0cvisudo\u6587\u4ef6\u4e5f\u6ca1\u6709\u5f02\u5e38\uff0c\u7136\u540e\u6211\u5c31\u5168\u5c40\u627enologin\u6587\u4ef6\uff0c\u641e\u4e0d\u597d\u6709\u4ec0\u4e48\u9690\u85cf\u7684nologin\u3002 <pre><code>[root@xxx run]# find / -name nologin -type f\n/usr/sbin/nologin\n/run/nologin\n</code></pre> \u8fd9\u4e2a/run/nologin\u662f\u54ea\u4e2a\u7599\u7629\u6765\u7684\uff0c\u7136\u540e\u53d1\u73b0\u770b\u4e86\u4e00\u4e0b\u6587\u4ef6\u7684\u5185\u5bb9\u3002</p> <p><pre><code>[root@xxx run]# cat /run/nologin\nSystem is booting up. See pam_nologin(8)[root@xxx run]# \n</code></pre> \u6211\u9760\uff0c\u8fd9\u4e0d\u5c31\u662f\u62a5\u9519\u7684\u8f93\u51fa\u3002</p> <p>\u5220\u9664\u8fd9\u4e2a /run/nologin \u8fd9\u4e2a\u6587\u4ef6\u662f\u5426\u6709\u4ec0\u4e48\u5371\u5bb3\uff1f\u4e0d\u5220\u6211\u5f97\u666e\u901a\u7528\u6237\u90fd\u767b\u5f55\u4e0d\u4e86\u4e86\uff0c\u968f\u5373\u6211\u5c31\u5220\u4e86\u8fd9\u4e2a\u6587\u4ef6\uff08\u4e3a\u5565\u4f1a\u60f3\u5220\u9664\u8fd9\u4e2a\u6587\u4ef6\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684/etc/nologin\u4e5f\u662f\u53ef\u4ee5\u5220\u9664\u7684\uff0c\u5e76\u4e14\u8003\u8651\u4e86\u5220\u9664\u53ef\u80fd\u4f1a\u6709\u7684\u5f71\u54cd\uff09\uff0c\u7136\u540e\u6d4b\u8bd5\u666e\u901a\u7528\u6237\u53ef\u4ee5\u767b\u5f55\u4e86\u3002</p> <ul> <li> \u975e\u7279\u6743\u7528\u6237\u80fd\u591f\u767b\u5f55\uff1a/run/nologin \u6587\u4ef6\u7684\u5b58\u5728\u4f1a\u963b\u6b62\u975e\u7279\u6743\u7528\u6237\u767b\u5f55\u7cfb\u7edf\u3002\u5982\u679c\u4f60\u5220\u9664\u4e86\u8be5\u6587\u4ef6\uff0c\u90a3\u4e48\u975e\u7279\u6743\u7528\u6237\u5c06\u80fd\u591f\u767b\u5f55\u7cfb\u7edf\u3002</li> <li> \u5b89\u5168\u6027\u964d\u4f4e\uff1a/run/nologin \u6587\u4ef6\u7684\u76ee\u7684\u662f\u5728\u7cfb\u7edf\u7ef4\u62a4\u671f\u95f4\u9632\u6b62\u975e\u7279\u6743\u7528\u6237\u767b\u5f55\uff0c\u4ee5\u786e\u4fdd\u7cfb\u7edf\u5b89\u5168\u3002\u5982\u679c\u4f60\u5220\u9664\u4e86\u8be5\u6587\u4ef6\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u66f4\u5bb9\u6613\u53d7\u5230\u672a\u7ecf\u6388\u6743\u7684\u8bbf\u95ee\u3002</li> </ul>"},{"location":"blog/2023/07/04/See%20pam_nologin%288%29/#2","title":"2\u3001\u4e3a\u5565\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898","text":"<ul> <li> <p> \u6211\u770b\u8fd9\u4e2a\u6587\u4ef6\u7684\u521b\u5efa\u65f6\u95f4\u662f\u57285\u670830\u53f7\uff0c\u7136\u540e\u6211\u60f3\u52305\u670830\u65e5\u6211\u5e72\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u6211\u6539\u4e86 /usr/lib/tmpfiles.d/tmp.conf \uff0c\u6709\u4e2a\u6240\u8c13\u7684\u67b6\u6784\u5e08\u5728\u7ebf\u4e0a\u53d1\u5e03\u4e86\u4e00\u4e2a\u5e94\u7528\uff0c\u5c06pid\u653e\u5728\u4e86/tmp \u4e0b\u9762\uff0c\u7136\u540e\u8ddf\u6211\u8bf4\u7ebf\u4e0a\u5e94\u7528\u53d1\u5e03\u5931\u8d25\u4e86\uff0c\u4e0d\u6210\u529f\u3002\u6211\u4e00\u67e5\u53d1\u73b0pid\u8fdb\u7a0b\u6587\u4ef6\u7684\u5185\u5bb9\u6539\u4e86\uff0cpid\u5bf9\u4e0d\u4e0a\uff0c\u6700\u540e\u67e5\u51fa\u6765\u662f\u56e0\u4e3a/tmp \u81ea\u52a8\u6e05\u4e86pid\u6587\u4ef6\u3002\u7136\u540e\u6211\u5c31\u60f3\u5ffd\u7565\u6389\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002</p> </li> <li> <p> \u4f46\u662f\u6539\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd8\u9700\u8981\u91cd\u542f systemd-tmpfiles-setup.service\uff0c\u7ed3\u679c\u53d1\u73b0\u8fd9\u4e2a\u670d\u52a1\u4e0d\u7ed9\u91cd\u542f\uff0c\u8fd8\u5f97\u53bb\u4fee\u6539/usr/lib/systemd/system/systemd-tmpfiles-setup.service \u7684RefuseManualStop=yes\uff0c\u4e00\u987f\u64cd\u4f5c\u540e\u5c31\u597d\u4e86\uff0c/tmp\u4e0b\u9762\u6392\u9664\u7684\u6587\u4ef6\u5230\u73b0\u5728\u90fd\u6ca1\u6709\u5220\u9664\u3002\u76f4\u81f3\u6628\u665a\u90fd\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u3002</p> </li> <li> <p> \u6700\u540e\u786e\u5b9a\u5c31\u662f\u7531 \u91cd\u542f systemd-tmpfiles-setup.service\u5bfc\u81f4\u7684\u3002</p> </li> </ul>"},{"location":"blog/2023/07/04/See%20pam_nologin%288%29/#_2","title":"\u603b\u7ed3","text":"<p>\u5728Systemd\u4e2d\uff0csystemd-tmpfiles-setup.service\u662f\u8d1f\u8d23\u5728\u7cfb\u7edf\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\u521b\u5efa\u4e34\u65f6\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u670d\u52a1\u3002\u800c\u521b\u5efa/run/nologin\u6587\u4ef6\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u9632\u6b62\u7528\u6237\u767b\u5f55\u7cfb\u7edf\u3002</p> <p>\u5f53\u7cfb\u7edf\u5904\u4e8e\u7ef4\u62a4\u6a21\u5f0f\u6216\u9700\u8981\u7981\u6b62\u7528\u6237\u767b\u5f55\u65f6\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a/run/nologin\u7684\u6587\u4ef6\u3002\u5982\u679c\u8be5\u6587\u4ef6\u5b58\u5728\uff0c\u7528\u6237\u8bd5\u56fe\u767b\u5f55\u7cfb\u7edf\u65f6\u5c06\u6536\u5230\u4e00\u4e2a\u62d2\u7edd\u767b\u5f55\u7684\u6d88\u606f\uff0c\u5e76\u4e14\u767b\u5f55\u8bf7\u6c42\u4f1a\u88ab\u62d2\u7edd\u3002</p> <p>\u91cd\u542fsystemd-tmpfiles-setup.service\u670d\u52a1\u53ef\u80fd\u4f1a\u91cd\u65b0\u751f\u6210\u4e34\u65f6\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u5e76\u4e14\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u91cd\u65b0\u521b\u5efa/run/nologin\u6587\u4ef6\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u786e\u4fdd\u5728\u7cfb\u7edf\u5f15\u5bfc\u671f\u95f4\u59cb\u7ec8\u5b58\u5728\u8fd9\u4e2a\u963b\u6b62\u7528\u6237\u767b\u5f55\u7684\u6807\u5fd7\u6587\u4ef6\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5bf9/run/nologin\u6587\u4ef6\u7684\u5177\u4f53\u4f7f\u7528\u53ef\u80fd\u56e0\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u548c\u914d\u7f6e\u800c\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"blog/2023/07/04/See%20pam_nologin%288%29/#_3","title":"\u53c2\u8003","text":"<p>\u53ef\u4ee5\u53c2\u8003\uff0c\u522b\u4eba\u9047\u5230\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u591a\uff1a</p> <p>https://bbs.archlinux.org/viewtopic.php?id=155281  https://bugzilla.redhat.com/show_bug.cgi?id=1507501</p> <p> </p> \u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002"},{"location":"blog/2024/01/16/crontab%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/","title":"crontab\u73af\u5883\u53d8\u91cf","text":"<p>crontab\u73af\u5883\u53d8\u91cf.</p>","tags":["crontab","\u73af\u5883\u53d8\u91cf"]},{"location":"blog/2024/01/16/crontab%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/#1fstab","title":"1\u3001\u5927\u81f4\u529f\u80fd\u5c31\u662f\u627e\u51fa\u672a\u5728fstab\u4e2d\u6302\u8f7d\u7684\u78c1\u76d8\uff0c\u5e76\u53d1\u9001\u5230\u4e91\u5e73\u53f0\u544a\u8b66\u3002","text":"<pre><code>#!/bin/bash\nsource /etc/profile\n\nremote_address=\"http://1.1.1.1:6666\"\nuser=xxxx\npass=xxxx\n\nexcept_block=(\"/dev/sr0\" \"/dev/cdrom\" \"/dev/dvd\")\n\nblkid_output=$(blkid -s UUID)\nall_block=()\n\n\ncheck_useless() {\n  target=$1\n  found=0\n  for item in \"${except_block[@]}\"; do\n      if [ \"$item\" == \"$target\" ]; then\n          found=1\n          break\n      fi\n  done\n  echo $found\n}\n\ncheck_block_in_fstab(){\n  uuid=$1\n  device=$2\n  uuid_wc=`grep $uuid /etc/fstab |wc -l`\n  device_wc=`grep $device /etc/fstab|wc -l`\n  appear_counts=$(($uuid_wc + $device_wc))\n  echo $appear_counts\n\n}\n\nmain(){\n   while IFS= read -r line; do\n     uuid=$(echo \"$line\" | awk '{print $2}' | cut -d \"=\" -f2 | sed 's/\"//g')\n     device=$(echo \"$line\" | awk '{print $1}' | sed 's/://g')\n\n     found=`check_useless $device`\n     if [ $found -eq 0 ];then\n        check_res=`check_block_in_fstab $uuid $device`\n        if [ $check_res -ne 1 ];then\n            JWT_TOKEN=`curl -s -X POST -d \"email=${user}&amp;password=${pass}\" \"${remote_address}/jwt/api-token-path/\"|awk -F '[:\"]' '{print $8}'`\n\n            curl \"${remote_address}/receive/ReceiveCustomAlarm/\" \\\n               -X POST \\\n               -H \"Content-Type: application/json\" \\\n               -H \"Authorization: Bearer $JWT_TOKEN\" \\\n               -d \"{\n                     \\\"subject\\\": \\\"\u6709\u78c1\u76d8\u672a\u5728fstab\u4e2d\\\",\n                     \\\"ip\\\": \\\"`hostname -I | cut -d' ' -f1`\\\",\n                     \\\"hostname\\\": \\\"`hostname`\\\",\n                     \\\"source\\\": \\\"\u670d\u52a1\u5668\\\",\n                     \\\"alarm_template_id\\\": 1, \n                     \\\"alarm_content\\\": {\n                       \\\"title\\\": \\\"\u6709\u78c1\u76d8\u672a\u5728fstab\u4e2d\\\",\n                       \\\"msg\\\": \\\"${uuid}-${device}\\\"\n                     }\n                   }\" \n        fi\n     fi\n   done &lt;&lt;&lt; \"$blkid_output\"\n}\n</code></pre>","tags":["crontab","\u73af\u5883\u53d8\u91cf"]},{"location":"blog/2024/01/16/crontab%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/#2","title":"2\u3001\u672c\u8eab\u8fd9\u4e2a\u4e1c\u897f\u6ca1\u5565\u6709\u8da3\u7684\uff0c\u4f46\u662f\u53d1\u73b0\u73af\u5883\u53d8\u91cf\u4e0d\u4e00\u6837\uff0c\u6bcf\u6b21\u90fd\u80fd\u5728\u73af\u5883\u53d8\u91cf\u4e0a\u51fa\u95ee\u9898\uff0c\u4f46\u662f\u6bcf\u6b21\u89e3\u51b3\u7684\u65b9\u5f0f\u4e5f\u4e0d\u4e00\u6837\uff0c\u6211\u5c31\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u6b21\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u4f9b\u5c0f\u4f19\u4f34\u7684\u89e3\u5fe7\u3002","text":"","tags":["crontab","\u73af\u5883\u53d8\u91cf"]},{"location":"blog/2024/01/16/crontab%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/#21blkid","title":"2.1\u3001\u56e0\u4e3a\u811a\u672c\u7528\u5230\u4e86blkid\u8fd9\u4e2a\u547d\u4ee4","text":"<pre><code>blkid: /usr/sbin/blkid /usr/share/man/man8/blkid.8.gz\n</code></pre>","tags":["crontab","\u73af\u5883\u53d8\u91cf"]},{"location":"blog/2024/01/16/crontab%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/#22crontab","title":"2.2\u3001\u6211\u770bcrontab\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4ee5\u4e3a\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u6bd5\u7adf\u624b\u52a8\u6267\u884c\u6ca1\u6709\u95ee\u9898","text":"<pre><code>cat /etc/crontab \nSHELL=/bin/bash\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\nMAILTO=root\n\n# For details see man 4 crontabs\n\n# Example of job definition:\n# .---------------- minute (0 - 59)\n# |  .------------- hour (0 - 23)\n# |  |  .---------- day of month (1 - 31)\n# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\n# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n# |  |  |  |  |\n# *  *  *  *  * user-name  command to be executed\n</code></pre>","tags":["crontab","\u73af\u5883\u53d8\u91cf"]},{"location":"blog/2024/01/16/crontab%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/#23crontabcrontab","title":"2.3\u3001\u7136\u540e\u653e\u5230crontab\u4e4b\u540e\uff0c\u53d1\u73b0\u547d\u4ee4\u6ca1\u6709\u6267\u884c\uff0c\u5728crontab\u4e2d\u7684\u73af\u5883\u53d8\u91cf\u662f","text":"<pre><code>/usr/bin:/bin\n</code></pre>","tags":["crontab","\u73af\u5883\u53d8\u91cf"]},{"location":"blog/2024/01/16/crontab%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/#24","title":"2.4\u3001\u6240\u4ee5\u9700\u8981\u7684\u547d\u4ee4\u4e0d\u5728\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u89e3\u51b3\u65b9\u5f0f","text":"","tags":["crontab","\u73af\u5883\u53d8\u91cf"]},{"location":"blog/2024/01/16/crontab%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/#241","title":"2.4.1\u3001\u4f7f\u7528\u5168\u8def\u5f84","text":"","tags":["crontab","\u73af\u5883\u53d8\u91cf"]},{"location":"blog/2024/01/16/crontab%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/#242etcprofileetcprofile","title":"2.4.2\u3001\u5f15\u5165/etc/profile\uff0c\u52a0\u8f7d/etc/profile \u6587\u4ef6\u4e2d\u7684\u73af\u5883\u53d8\u91cf","text":"\u89c9\u5f97\u6709\u7528\u7684\u8001\u94c1\u4eec\u53ef\u4ee5\"\u5fae\u4fe1\"\u8d5e\u52a9\u4e00\u676f82\u5e74\u7684\u96ea\u78a7\u5466\u3002","tags":["crontab","\u73af\u5883\u53d8\u91cf"]},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/category/devops/","title":"devops","text":""},{"location":"blog/category/database/","title":"database","text":""},{"location":"blog/category/docker/","title":"docker","text":""},{"location":"blog/category/sys/","title":"sys","text":""},{"location":"blog/category/k8s/","title":"k8s","text":""},{"location":"blog/category/monitor/","title":"monitor","text":""},{"location":"blog/page/2/","title":"Index","text":""},{"location":"blog/archive/2023/page/2/","title":"2023","text":""},{"location":"blog/category/devops/page/2/","title":"devops","text":""}]}